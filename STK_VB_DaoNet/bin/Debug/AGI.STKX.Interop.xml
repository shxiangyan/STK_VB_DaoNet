<doc>
  <assembly>
    <name>AGI.STKX</name>
  </assembly>
  <members>
    <member name="T:AGI.STKX.IAgPickInfoData">
      <summary>Mouse pick details.</summary>
      <remarks><para>This object is not creatable. It is used as the return value from the Map PickInfo and Globe PickInfo methods.</para><para>Note: The PickInfo() method caches its return value (for better performance). If you make multiple calls to that method, you need to extract the results from the AgPickInfoData object before making the next call, e.g.</para><para>Dim point1 As AgPickInfoData<para></para>Dim point2 As AgPickInfoData<para></para>point1 = Me.m_StkxGlobe.PickInfo(x1, y1)<para></para>point2 = Me.m_StkxGlobe.PickInfo(x2, y2)<para></para>... </para><para>At this juncture point1 and point2 both reference the same object and share the same values. To avoid this, extract the values from the result before making the second call, i.e.</para><para>Dim point As AgPickInfoData<para></para>point = Me.m_StkxGlobe.PickInfo(x1, y1)<para></para>lat1 = point.Lat<para></para>lon1 = point.Lon<para></para>point = Me.m_StkxGlobe.PickInfo(x2, y2)<para></para>lat2 = point.Lat<para></para>lon3 = point.Lon<para></para>... </para></remarks>
    </member>
    <member name="P:AGI.STKX.IAgPickInfoData.ObjPath">
      <summary>Path of the STK object picked if any (or empty string).</summary>
    </member>
    <member name="P:AGI.STKX.IAgPickInfoData.Lat">
      <summary>Latitude of point clicked (if available).</summary>
    </member>
    <member name="P:AGI.STKX.IAgPickInfoData.Lon">
      <summary>Longitude of point clicked (if available).</summary>
    </member>
    <member name="P:AGI.STKX.IAgPickInfoData.Alt">
      <summary>Altitude of point clicked (if available).</summary>
    </member>
    <member name="P:AGI.STKX.IAgPickInfoData.IsObjPathValid">
      <summary>Indicate if the ObjPath property is valid.</summary>
    </member>
    <member name="P:AGI.STKX.IAgPickInfoData.IsLatLonAltValid">
      <summary>Indicate if the Lat/Lon/Alt properties are valid.</summary>
    </member>
    <member name="T:AGI.STKX.IAgRubberBandPickInfoData">
      <summary>Rubber-band mouse pick result.</summary>
      <remarks><para>This object is not creatable. It is used as the return value from the Globe control RubberBandPickInfo method.</para></remarks>
    </member>
    <member name="P:AGI.STKX.IAgRubberBandPickInfoData.ObjPaths">
      <summary>List of object paths selected.</summary>
    </member>
    <member name="T:AGI.STKX.IAgObjPathCollection">
      <summary>Collection of object paths.</summary>
      <remarks><para>This object is not creatable. It is used for the ObjPaths property of the AgRubberBandPickInfoData object.</para></remarks>
    </member>
    <member name="M:AGI.STKX.IAgObjPathCollection.Range(System.Int32,System.Int32)">
      <summary>Return the elements within the specified range.<para>The purpose of this method is to avoid marshalling round-trips (marshalling occurs when the STK X controls are used in .NET or Java).</para><para>If the collection contains lots of elements, iterating using the For Each statement or the Item method may be slow. Using the Range method enables you to transfer several elements in one round-trip improving performance.</para></summary>
      <returns><para>Array of variants [COM] or objects [.NET].</para></returns>
      <param name="StartIndex"><para>Start position of the range. one represents the first element of the collection.</para></param>
      <param name="StopIndex"><para>End position of the range. The Count property represents the last element of the collection.</para></param>
    </member>
    <member name="P:AGI.STKX.IAgObjPathCollection.Count">
      <summary>Number of elements contained in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.IAgObjPathCollection.Item">
      <summary>Gets the element at the specified index (0-based).</summary>
    </member>
    <member name="P:AGI.STKX.IAgObjPathCollection._NewEnum">
      <summary>Returns an object that can be used to iterate through all the object paths in the collection.</summary>
    </member>
    <member name="T:AGI.STKX.IAgSTKXApplication">
      <summary>STK X Application object.</summary>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplication.ExecuteCommand(System.String)">
      <summary>Send a connect command to STK X.<para>Following is a brief description of the basic format for data sent to and from Connect. Syntax for each command is explained briefly. Syntax specifies the order in which you must generate a Connect command as well as any parameters and switches associated with the command.</para>    Input Command Format to Connect<para>Commands sent to Connect use the following format:</para>&lt;CommandName&gt; &lt;ObjectPath&gt; [&lt;CommandData&gt;] <para>NOTE: Although the <para>&lt;CommandName&gt;</para> field isn't case sensitive, the <para>&lt;ObjectPath&gt;</para> is. <para>&lt;CommandData&gt;</para> may or may not be case sensitive. </para><para>where:</para><para>Syntax,Description,</para><para><para>&lt;CommandName&gt;</para>,The name of a particular command (e.g., Load).,</para><para><para>&lt;ObjectPath&gt;</para>,The object (e.g., <para>Scenario/stkDemo/Satellite/Shuttle</para>) to which the <para>&lt;CommandName&gt;</para> directs action. ,</para><para><para>[&lt;CommandData&gt;]</para>,<para>&lt;CommandData&gt;</para> fields modify a <para>&lt;CommandName&gt;</para> and may or may not be required. Please refer to the format of the individual commands for additional information.,</para><para>NOTE: Since only one scenario can be open at any given time in STK, you can substitute the scenario name with a wildcard (<para>*</para>) so that the <para>&lt;ObjectPath&gt;</para> is <para>Scenario/*</para> or just <para>*</para>. For example, you could type <para>Scenario/*</para> for Scenario/stkDemo, where <para>*</para> refers to the scenario loaded.</para>    Output<para>If the command succeeds, the return value contains the list of strings.</para><para>If the command fails, a COM exception is raised (error code: 0x80040002, text: Command Failed). To implement error processing you need to handle this exception. This varies from language to language:</para><para></para><list type="bullet"><item><description>in the .NET languages you need to catch an exception of type System.Runtime.InteropServices.COMException. </description></item></list><para>                  Try<para></para>                      Me.AxAgUiAxVOCntrl1.Application.ExecuteCommand(Bad command)<para></para>                  Catch ex As System.Runtime.InteropServices.COMException<para></para>                      MsgBox(The command failed:  &amp; ex.ErrorCode &amp;  [ &amp; ex.Message &amp; ])<para></para>                  End Try<para></para></para></summary>
      <returns><para>If the command succeeds, a collection of strings (AgExecCmdResult object) is returned.</para><para>If the command fails, an automation exception is raised (error code: 0x80040002, text: Command Failed).</para></returns>
      <param name="Command"><para>Connect command to execute. For instance: New / Scenario Scenario1.</para></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplication.GetLicensingReport">
      <summary>Returns a formatted string that contains the license names and their states. The string is formatted as an XML document.<para>This method is available for debugging/tech support purposes. You should not need to use this unless troubleshooting a problem.</para></summary>
      <returns><para>Returns an XML string describing the available licenses.</para></returns>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplication.SetOnlineOptions(System.Boolean,System.String,System.Int32,System.String,System.String,System.Boolean)">
      <summary><para>Sets http proxy online options.</para><para>Use SetOnlineOptions to specify the correct Server and Port information and, optionally, a proxy username and password. Use this option if your internet access is via a firewall. If you are unsure how your internet connection is configured, please consult your system administrator.</para></summary>
      <returns><para>Returns True if the values were set successfully; otherwise returns False.</para></returns>
      <param name="UseProxy"><para>If set to True, the proxy information is used/set.</para></param>
      <param name="ServerName"><para>Server name or IP address of the HTTP server.</para></param>
      <param name="PortNum"><para>Port number used for proxy.</para></param>
      <param name="UserName"><para>User name for proxy server</para></param>
      <param name="Password"><para>Password for proxy server.</para></param>
      <param name="SavePassword"><para>If set to True, password is saved.</para></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplication.GetOnlineOptions(.VARIANT_BOOL@,.BSTR@,.long@,.BSTR@)">
      <summary><para>Retrieves http proxy online options.</para></summary>
      <returns><para>Returns True if the values were retrieved successfully; otherwise returns False.</para></returns>
      <param name="UseProxy"><para>If True is returned, the proxy information was used.</para></param>
      <param name="ServerName"><para>Server name or IP address of the HTTP server.</para></param>
      <param name="PortNum"><para>Port number used for proxy.</para></param>
      <param name="UserName"><para>User name for proxy server.</para></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplication.SetConnectHandler(System.String,System.String)">
      <summary>Set callback to handle a certain connect command</summary>
      <param name="CommandID"></param>
      <param name="ProgID"></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplication.ExecuteMultipleCommands(System.Array@,AGI.STKX.AgEExecMultiCmdResultAction)">
      <summary><para>Allows the batch processing of multiple connect commands. </para><para>HRESULT ExecuteMultipleCommands(<para></para>[in] SAFEARRAY(VARIANT)* ConnectCommands, <para></para>[in] enum AgEExecMultiCmdResultAction eAction, <para></para>[out, retval] IAgExecMultiCmdResult** ppResult);</para></summary>
      <returns><para>ppResult - upon return, contains a pointer to the IAgExecMultiCmdResult object. Instances of IAgExecMultiCmdResult allow users to access the status and results of each command.</para></returns>
      <param name="ConnectCommands"><para>an array of Connect commands.</para></param>
      <param name="EAction"><para>Bitmask specifies flags used to control the behavior of the method when an error occurs<para></para>while executing a command. Sometimes it is desirable to stop the batch processing immediatelly<para></para>or continue running the remaining commands in the batch.</para></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplication.IsFeatureAvailable(AGI.STKX.AgEFeatureCodes)">
      <summary>Returns true if the specified feature is available.</summary>
      <param name="FeatureCode"><para>The feature to be checked.</para></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplication.Terminate">
      <summary>Terminates the use of STK Engine. This must be the last call to STK Engine.</summary>
    </member>
    <member name="P:AGI.STKX.IAgSTKXApplication.EnableConnect">
      <summary>Enable or disable TCP/IP connect command processing (default: disabled).</summary>
    </member>
    <member name="P:AGI.STKX.IAgSTKXApplication.ConnectPort">
      <summary>Specify TCP/IP port to be used by Connect (default: 5001).</summary>
    </member>
    <member name="P:AGI.STKX.IAgSTKXApplication.HostID">
      <summary>Returns the Host ID.</summary>
    </member>
    <member name="P:AGI.STKX.IAgSTKXApplication.RegistrationID">
      <summary>Returns the Registration ID.</summary>
    </member>
    <member name="P:AGI.STKX.IAgSTKXApplication.Version">
      <summary>Returns the version number</summary>
    </member>
    <member name="P:AGI.STKX.IAgSTKXApplication.VendorID">
      <summary>The identifier of the vendor.</summary>
    </member>
    <member name="P:AGI.STKX.IAgSTKXApplication.LogFileFullName">
      <summary><para>Returns the full path and log file  name (empty if logging is not active).</para></summary>
    </member>
    <member name="P:AGI.STKX.IAgSTKXApplication.LoggingMode">
      <summary><para>Sets or retrieves the logging mode (Active, Inactive, ActiveKeepFile).<para></para></para></summary>
    </member>
    <member name="P:AGI.STKX.IAgSTKXApplication.ConnectMaxConnections">
      <summary><para>Specifies the maximum number of simultaneous Connect connections to be accepted by STK X. The maximum number of connections is constrained by the Integration Module license.</para></summary>
    </member>
    <member name="P:AGI.STKX.IAgSTKXApplication.NoGraphics">
      <summary>Start engine with or without graphics (default: engine starts with graphics.).</summary>
    </member>
    <member name="P:AGI.STKX.IAgSTKXApplication.ShowSLAIfNotAccepted">
      <summary>Shows the Software License Agreement dialog if not already accepted.</summary>
    </member>
    <member name="P:AGI.STKX.IAgSTKXApplication.UseHook">
      <summary>Start engine with or without message hook setup (default: engine starts with message hook setup.).</summary>
    </member>
    <member name="T:AGI.STKX.IAgExecCmdResult">
      <summary>Collection of strings returned by the ExecuteCommand.</summary>
    </member>
    <member name="M:AGI.STKX.IAgExecCmdResult.Range(System.Int32,System.Int32)">
      <summary>Return the elements within the specified range.</summary>
      <param name="StartIndex"></param>
      <param name="StopIndex"></param>
    </member>
    <member name="P:AGI.STKX.IAgExecCmdResult.Count">
      <summary>Number of elements contained in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.IAgExecCmdResult.Item">
      <summary>Gets the element at the specified index (0-based).</summary>
    </member>
    <member name="P:AGI.STKX.IAgExecCmdResult._NewEnum">
      <summary>Returns an object that can be used to iterate through all the strings in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.IAgExecCmdResult.IsSucceeded">
      <summary>Indicates whether the object contains valid results.</summary>
    </member>
    <member name="T:AGI.STKX.AgELoggingMode">
      <summary>Specifies the state of the log file.</summary>
    </member>
    <member name="F:AGI.STKX.AgELoggingMode.eLogInactive">
      <summary>The log file is not created.</summary>
    </member>
    <member name="F:AGI.STKX.AgELoggingMode.eLogActive">
      <summary>The log file is created but deleted upon application termination.</summary>
    </member>
    <member name="F:AGI.STKX.AgELoggingMode.eLogActiveKeepFile">
      <summary>The log file is created and kept even after application is terminated.</summary>
    </member>
    <member name="T:AGI.STKX.AgEExecMultiCmdResultAction">
      <summary>Enumeration defines a set of actions when an error occurs while executing a command batch.</summary>
    </member>
    <member name="F:AGI.STKX.AgEExecMultiCmdResultAction.eContinueOnError">
      <summary>Continue executing the remaining commands in the command batch.</summary>
    </member>
    <member name="F:AGI.STKX.AgEExecMultiCmdResultAction.eStopOnError">
      <summary>Terminate the execution of the command batch but do not throw an exception.</summary>
    </member>
    <member name="F:AGI.STKX.AgEExecMultiCmdResultAction.eExceptionOnError">
      <summary>Terminate the execution of the command batch and throw an exception.</summary>
    </member>
    <member name="F:AGI.STKX.AgEExecMultiCmdResultAction.eIgnoreExecCmdResult">
      <summary>Ignore results returned by individual commands. The option must be used in combination with other flags.</summary>
    </member>
    <member name="T:AGI.STKX.IAgExecMultiCmdResult">
      <summary>Collection of objects returned by the ExecuteMultipleCommands.</summary>
    </member>
    <member name="P:AGI.STKX.IAgExecMultiCmdResult.Count">
      <summary>Number of elements contained in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.IAgExecMultiCmdResult.Item">
      <summary>Gets the element at the specified index (0-based).</summary>
    </member>
    <member name="P:AGI.STKX.IAgExecMultiCmdResult._NewEnum">
      <summary>Returns an object that can be used to iterate through all the objects in the collection.</summary>
    </member>
    <member name="T:AGI.STKX.AgEFeatureCodes">
      <summary>The enumeration values are used to check availability of a given feature.</summary>
    </member>
    <member name="F:AGI.STKX.AgEFeatureCodes.eFeatureCodeEngineRuntime">
      <summary>The enumeration is used to check whether the engine runtime is available.</summary>
    </member>
    <member name="F:AGI.STKX.AgEFeatureCodes.eFeatureCodeGlobeControl">
      <summary>The enumeration is used to check whether the globe is available.</summary>
    </member>
    <member name="T:AGI.STKX.IAgDataObject">
      <summary>IAgDataObject is used for OLE drag and drop operations</summary>
      <remarks><para>This object is not creatable. It is passed as an argument to the Map OLEDragDrop and Globe OLEDragDrop event procedures.</para></remarks>
    </member>
    <member name="P:AGI.STKX.IAgDataObject.Files">
      <summary>Returns a collection of filenames.</summary>
    </member>
    <member name="T:AGI.STKX.IAgDataObjectFiles">
      <summary>Collection of file names.</summary>
      <remarks><para>This object is not creatable. It is used in the Map OLEDragDrop and Globe OLEDragDrop event procedures, through the Files property of the DataObject argument.</para></remarks>
    </member>
    <member name="P:AGI.STKX.IAgDataObjectFiles._NewEnum">
      <summary>Returns an object that can be used to iterate through all the file names in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.IAgDataObjectFiles.Item">
      <summary>Gets the file name at the specified index (0-based).</summary>
    </member>
    <member name="P:AGI.STKX.IAgDataObjectFiles.Count">
      <summary>Number of file names contained in the collection.</summary>
    </member>
    <member name="T:AGI.STKX.IAgDrawElem">
      <summary>Draw element.</summary>
      <remarks><para>This interface is the base interface for the elements of the AgDrawElemCollection collection.</para></remarks>
    </member>
    <member name="P:AGI.STKX.IAgDrawElem.Visible">
      <summary>Show or hide the element.</summary>
    </member>
    <member name="T:AGI.STKX.IAgDrawElemRect">
      <summary>Defines a rectangle in control coordinates.</summary>
      <remarks><para>This object is not creatable. It is created indirectly through the Add method of the AgDrawElemCollection object.</para></remarks>
    </member>
    <member name="M:AGI.STKX.IAgDrawElemRect.Set(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Set the rectangle coordinates.<para>The rectangle coordinates are updated, and then the display is updated.</para></summary>
      <param name="Left"><para>The x-coordinate of the left edge of this rectangle (in the control's window coordinates).</para></param>
      <param name="Top"><para>The y-coordinate of the top edge of this rectangle (in the control's window coordinates).</para></param>
      <param name="Right"><para>The x-coordinate of the right edge of this rectangle (in the control's window coordinates).</para></param>
      <param name="Bottom"><para>The y-coordinate of the bottom edge of this rectangle (in the control's window coordinates).</para></param>
    </member>
    <member name="P:AGI.STKX.IAgDrawElemRect.Visible">
      <summary>Show or hide the element.</summary>
    </member>
    <member name="P:AGI.STKX.IAgDrawElemRect.Left">
      <summary>The x-coordinate of the left edge of this rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.IAgDrawElemRect.Right">
      <summary>The x-coordinate of the right edge of this rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.IAgDrawElemRect.Top">
      <summary>The y-coordinate of the top edge of this rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.IAgDrawElemRect.Bottom">
      <summary>The y-coordinate of the bottom edge of this rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.IAgDrawElemRect.Color">
      <summary>Color of the rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.IAgDrawElemRect.LineWidth">
      <summary>Specifies the width of the line.</summary>
    </member>
    <member name="P:AGI.STKX.IAgDrawElemRect.LineStyle">
      <summary>Specifies the style of the line.</summary>
    </member>
    <member name="T:AGI.STKX.AgELineStyle">
      <summary>Line Style</summary>
    </member>
    <member name="F:AGI.STKX.AgELineStyle.eSolid">
      <summary>Specifies a solid line.</summary>
    </member>
    <member name="F:AGI.STKX.AgELineStyle.eDashed">
      <summary>Specifies a dashed line.</summary>
    </member>
    <member name="F:AGI.STKX.AgELineStyle.eDotted">
      <summary>Specifies a dotted line.</summary>
    </member>
    <member name="F:AGI.STKX.AgELineStyle.eDotDashed">
      <summary>Dot-dashed line.</summary>
    </member>
    <member name="F:AGI.STKX.AgELineStyle.eLongDashed">
      <summary>Specifies a long dashed line.</summary>
    </member>
    <member name="F:AGI.STKX.AgELineStyle.eDashDotDotted">
      <summary>Specifies an alternating dash-dot-dot line.</summary>
    </member>
    <member name="F:AGI.STKX.AgELineStyle.eMDash">
      <summary>Specifies a user configurable medium dashed line.</summary>
    </member>
    <member name="F:AGI.STKX.AgELineStyle.eLDash">
      <summary>Specifies a user configurable long dashed line.</summary>
    </member>
    <member name="F:AGI.STKX.AgELineStyle.eSDashDot">
      <summary>Specifies a user configurable small dash-dotted line.</summary>
    </member>
    <member name="F:AGI.STKX.AgELineStyle.eMDashDot">
      <summary>Specifies a user configurable medium dash-dotted line.</summary>
    </member>
    <member name="F:AGI.STKX.AgELineStyle.eLDashDot">
      <summary>Specifies a user configurable long dash-dotted line.</summary>
    </member>
    <member name="F:AGI.STKX.AgELineStyle.eMSDash">
      <summary>Specifies a user configurable medium followed by small dashed line.</summary>
    </member>
    <member name="F:AGI.STKX.AgELineStyle.eLSDash">
      <summary>Specifies a user configurable long followed by small dashed line.</summary>
    </member>
    <member name="F:AGI.STKX.AgELineStyle.eLMDash">
      <summary>Specifies a user configurable long followed by medium dashed line.</summary>
    </member>
    <member name="F:AGI.STKX.AgELineStyle.eLMSDash">
      <summary>Specifies a user configurable medium followed by small dashed line.</summary>
    </member>
    <member name="F:AGI.STKX.AgELineStyle.eDot">
      <summary>Specifies a dotted line.</summary>
    </member>
    <member name="F:AGI.STKX.AgELineStyle.eLongDash">
      <summary>Specifies a long dashed line.</summary>
    </member>
    <member name="F:AGI.STKX.AgELineStyle.eSDash">
      <summary>Specifies an alternating dash-dot line.</summary>
    </member>
    <member name="T:AGI.STKX.IAgDrawElemCollection">
      <summary>Collection of elements to draw on the control.</summary>
      <remarks><para>This object is not creatable. It is accessible through the DrawElements property of the Globe control.</para></remarks>
    </member>
    <member name="M:AGI.STKX.IAgDrawElemCollection.Clear">
      <summary>Clears the contents of the collection and updates the display.</summary>
    </member>
    <member name="M:AGI.STKX.IAgDrawElemCollection.Add(System.String)">
      <summary>Factory to create and add a new element to the end of the sequence.</summary>
      <returns><para>Returns a new drawing element (interface IAgDrawElem).</para><para>When the input parameter Type is Rect, the return data is of type AgDrawElemRect.</para><para>If the input parameter Type is incorrect, an automation exception is raised.</para></returns>
      <param name="ElemType"><para>Type of element to create. Currently only Rect is supported.</para></param>
    </member>
    <member name="M:AGI.STKX.IAgDrawElemCollection.Remove(AGI.STKX.IAgDrawElem)">
      <summary>Remove the specified element.</summary>
      <returns><para>None. An automation exception is thrown if the element is not found in the collection.</para></returns>
      <param name="DrawElem"><para>Element to remove from the collection.</para></param>
    </member>
    <member name="P:AGI.STKX.IAgDrawElemCollection.Count">
      <summary>Number of elements contained in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.IAgDrawElemCollection.Item">
      <summary>Gets the element at the specified index (0-based).</summary>
    </member>
    <member name="P:AGI.STKX.IAgDrawElemCollection._NewEnum">
      <summary>Returns an object that can be used to iterate through all the strings in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.IAgDrawElemCollection.Visible">
      <summary>Show or hide all the elements.</summary>
    </member>
    <member name="T:AGI.STKX.IAgWinProjPos">
      <summary>Projected window postion detail.</summary>
    </member>
    <member name="P:AGI.STKX.IAgWinProjPos.XPos">
      <summary>Projected window X position.</summary>
    </member>
    <member name="P:AGI.STKX.IAgWinProjPos.YPos">
      <summary>Projected window Y position.</summary>
    </member>
    <member name="P:AGI.STKX.IAgWinProjPos.IsWinProjPosValid">
      <summary>Indicates if the returned projected positon is valid or not.</summary>
    </member>
    <member name="T:AGI.STKX.IAgDrawElemLine">
      <summary>Defines a line in control coordinates.</summary>
      <remarks><para>This object is not creatable. It is created indirectly through the Add method of the AgDrawElemCollection object.</para></remarks>
    </member>
    <member name="M:AGI.STKX.IAgDrawElemLine.Set(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Set the rectangle coordinates.<para>The line coordinates are updated, and then the display is updated.</para></summary>
      <param name="Left"><para>The x-coordinate of the left edge of this line (in the control's window coordinates).</para></param>
      <param name="Top"><para>The y-coordinate of the top edge of this line (in the control's window coordinates).</para></param>
      <param name="Right"><para>The x-coordinate of the right edge of this line (in the control's window coordinates).</para></param>
      <param name="Bottom"><para>The y-coordinate of the bottom edge of this line (in the control's window coordinates).</para></param>
    </member>
    <member name="P:AGI.STKX.IAgDrawElemLine.Visible">
      <summary>Show or hide the element.</summary>
    </member>
    <member name="P:AGI.STKX.IAgDrawElemLine.Left">
      <summary>The x-coordinate of the left edge of this line.</summary>
    </member>
    <member name="P:AGI.STKX.IAgDrawElemLine.Right">
      <summary>The x-coordinate of the right edge of this line.</summary>
    </member>
    <member name="P:AGI.STKX.IAgDrawElemLine.Top">
      <summary>The y-coordinate of the top edge of this line.</summary>
    </member>
    <member name="P:AGI.STKX.IAgDrawElemLine.Bottom">
      <summary>The y-coordinate of the bottom edge of this line.</summary>
    </member>
    <member name="P:AGI.STKX.IAgDrawElemLine.Color">
      <summary>Color of the rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.IAgDrawElemLine.LineWidth">
      <summary>Specifies the width of the line.</summary>
    </member>
    <member name="P:AGI.STKX.IAgDrawElemLine.LineStyle">
      <summary>Specifies the style of the line.</summary>
    </member>
    <member name="T:AGI.STKX.AgEMouseMode">
      <summary>Mouse modes.</summary>
    </member>
    <member name="F:AGI.STKX.AgEMouseMode.eMouseModeAutomatic">
      <summary>Automatic. The control handles the mouse events and then fires the events to the container for additional processing.</summary>
    </member>
    <member name="F:AGI.STKX.AgEMouseMode.eMouseModeManual">
      <summary>None. No default action happens on mouse events. Events are fired to the container.</summary>
    </member>
    <member name="T:AGI.STKX.AgEOLEDropMode">
      <summary>Specifies how to handle OLE drop operations.</summary>
    </member>
    <member name="F:AGI.STKX.AgEOLEDropMode.eNone">
      <summary>None. The control does not accept OLE drops and displays the No Drop cursor.</summary>
    </member>
    <member name="F:AGI.STKX.AgEOLEDropMode.eManual">
      <summary>Manual. The control triggers the OLE drop events, allowing the programmer to handle the OLE drop operation in code.</summary>
    </member>
    <member name="F:AGI.STKX.AgEOLEDropMode.eAutomatic">
      <summary>Automatic. The control automatically accepts OLE drops if the DataObject object contains data in a format it recognizes. No OLE drag/drop events on the target will occur when OLEDropMode is set to eAutomatic.</summary>
    </member>
    <member name="T:AGI.STKX.AgEButtonValues">
      <summary>Numeric value of the mouse button pressed.</summary>
    </member>
    <member name="F:AGI.STKX.AgEButtonValues.eLeftPressed">
      <summary>The left button is pressed.</summary>
    </member>
    <member name="F:AGI.STKX.AgEButtonValues.eRightPressed">
      <summary>The right button is pressed.</summary>
    </member>
    <member name="F:AGI.STKX.AgEButtonValues.eMiddlePressed">
      <summary>The middle button is pressed.</summary>
    </member>
    <member name="T:AGI.STKX.AgEShiftValues">
      <summary>State of the Shift/Ctrl/Alt keys.</summary>
    </member>
    <member name="F:AGI.STKX.AgEShiftValues.eShiftPressed">
      <summary>The Shift key was pressed.</summary>
    </member>
    <member name="F:AGI.STKX.AgEShiftValues.eCtrlPressed">
      <summary>The Ctrl key was pressed.</summary>
    </member>
    <member name="F:AGI.STKX.AgEShiftValues.eAltPressed">
      <summary>The ALT key was pressed.</summary>
    </member>
    <member name="T:AGI.STKX.AgELogMsgType">
      <summary>Log message types.</summary>
    </member>
    <member name="F:AGI.STKX.AgELogMsgType.eLogMsgDebug">
      <summary>Debugging message.</summary>
    </member>
    <member name="F:AGI.STKX.AgELogMsgType.eLogMsgInfo">
      <summary>Informational message.</summary>
    </member>
    <member name="F:AGI.STKX.AgELogMsgType.eLogMsgForceInfo">
      <summary>Informational message.</summary>
    </member>
    <member name="F:AGI.STKX.AgELogMsgType.eLogMsgWarning">
      <summary>Warning message.</summary>
    </member>
    <member name="F:AGI.STKX.AgELogMsgType.eLogMsgAlarm">
      <summary>Alarm message.</summary>
    </member>
    <member name="T:AGI.STKX.AgELogMsgDispID">
      <summary>Log message destination options.</summary>
    </member>
    <member name="F:AGI.STKX.AgELogMsgDispID.eLogMsgDispAll">
      <summary>STK displays the message in all the log destination.</summary>
    </member>
    <member name="F:AGI.STKX.AgELogMsgDispID.eLogMsgDispDefault">
      <summary>STK displays the message in the default log destination.</summary>
    </member>
    <member name="F:AGI.STKX.AgELogMsgDispID.eLogMsgDispMsgWin">
      <summary>STK displays the message in the message window.</summary>
    </member>
    <member name="F:AGI.STKX.AgELogMsgDispID.eLogMsgDispStatusBar">
      <summary>STK displays the message in the status bar.</summary>
    </member>
    <member name="T:AGI.STKX.AgExecCmdResult">
      <summary>Collection of strings returned by the ExecuteCommand.</summary>
    </member>
    <member name="M:AGI.STKX.AgExecCmdResult.Range(System.Int32,System.Int32)">
      <summary>Return the elements within the specified range.</summary>
      <param name="StartIndex"></param>
      <param name="StopIndex"></param>
    </member>
    <member name="P:AGI.STKX.AgExecCmdResult.Count">
      <summary>Number of elements contained in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.AgExecCmdResult.Item">
      <summary>Gets the element at the specified index (0-based).</summary>
    </member>
    <member name="P:AGI.STKX.AgExecCmdResult._NewEnum">
      <summary>Returns an object that can be used to iterate through all the strings in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.AgExecCmdResult.IsSucceeded">
      <summary>Indicates whether the object contains valid results.</summary>
    </member>
    <member name="T:AGI.STKX.AgExecCmdResultClass">
      <summary>Collection of strings returned by the ExecuteCommand.</summary>
    </member>
    <member name="M:AGI.STKX.AgExecCmdResultClass.Range(System.Int32,System.Int32)">
      <summary>Return the elements within the specified range.</summary>
      <param name="StartIndex"></param>
      <param name="StopIndex"></param>
    </member>
    <member name="P:AGI.STKX.AgExecCmdResultClass.Count">
      <summary>Number of elements contained in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.AgExecCmdResultClass.Item">
      <summary>Gets the element at the specified index (0-based).</summary>
    </member>
    <member name="P:AGI.STKX.AgExecCmdResultClass._NewEnum">
      <summary>Returns an object that can be used to iterate through all the strings in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.AgExecCmdResultClass.IsSucceeded">
      <summary>Indicates whether the object contains valid results.</summary>
    </member>
    <member name="T:AGI.STKX.AgExecMultiCmdResult">
      <summary>Collection of objects returned by the ExecuteMultipleCommands.</summary>
    </member>
    <member name="P:AGI.STKX.AgExecMultiCmdResult.Count">
      <summary>Number of elements contained in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.AgExecMultiCmdResult.Item">
      <summary>Gets the element at the specified index (0-based).</summary>
    </member>
    <member name="P:AGI.STKX.AgExecMultiCmdResult._NewEnum">
      <summary>Returns an object that can be used to iterate through all the objects in the collection.</summary>
    </member>
    <member name="T:AGI.STKX.AgExecMultiCmdResultClass">
      <summary>Collection of objects returned by the ExecuteMultipleCommands.</summary>
    </member>
    <member name="P:AGI.STKX.AgExecMultiCmdResultClass.Count">
      <summary>Number of elements contained in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.AgExecMultiCmdResultClass.Item">
      <summary>Gets the element at the specified index (0-based).</summary>
    </member>
    <member name="P:AGI.STKX.AgExecMultiCmdResultClass._NewEnum">
      <summary>Returns an object that can be used to iterate through all the objects in the collection.</summary>
    </member>
    <member name="T:AGI.STKX.IAgUiAxVOCntrlEvents">
      <summary>AGI Globe control events.</summary>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlEvents.KeyDown(.short@,System.Int16)">
      <summary>Occurs when the user presses a key while the control has the focus.</summary>
      <param name="KeyCode"></param>
      <param name="Shift"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlEvents.KeyPress(.short@)">
      <summary>Occurs when the user presses and releases a key or key combination that corresponds to an ANSI code.</summary>
      <param name="KeyAscii"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlEvents.KeyUp(.short@,System.Int16)">
      <summary>Occurs when the user releases a key while the control has the focus.</summary>
      <param name="KeyCode"></param>
      <param name="Shift"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlEvents.Click">
      <summary>Occurs when the user presses and then releases a mouse button over the control.</summary>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlEvents.DblClick">
      <summary>Occurs when the user presses and releases a mouse button and then presses and releases it again over the control.</summary>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlEvents.MouseDown(System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Occur when the user presses a mouse button.</summary>
      <param name="Button"></param>
      <param name="Shift"></param>
      <param name="X"></param>
      <param name="Y"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlEvents.MouseMove(System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Occurs when the mouse pointer is moved across the control.</summary>
      <param name="Button"></param>
      <param name="Shift"></param>
      <param name="X"></param>
      <param name="Y"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlEvents.MouseUp(System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Occurs when the user releases a mouse button.</summary>
      <param name="Button"></param>
      <param name="Shift"></param>
      <param name="X"></param>
      <param name="Y"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlEvents.OLEDragDrop(AGI.STKX.IAgDataObject,System.Int32,System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Fired when a source component is dropped onto the control</summary>
      <param name="Data"></param>
      <param name="Effect"></param>
      <param name="Button"></param>
      <param name="Shift"></param>
      <param name="X"></param>
      <param name="Y"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlEvents.MouseWheel(System.Int16,System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Occurs when the mouse wheel is rotated on the control.</summary>
      <param name="Button"></param>
      <param name="Shift"></param>
      <param name="Delta"></param>
      <param name="X"></param>
      <param name="Y"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlEvents.OnObjectEditingStart(System.String)">
      <summary>Triggered when a 3D object enters in edit mode.</summary>
      <param name="Path"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlEvents.OnObjectEditingApply(System.String)">
      <summary>Triggered when a 3D object editing changes are applied.</summary>
      <param name="Path"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlEvents.OnObjectEditingCancel(System.String)">
      <summary>Triggered when a 3D object edit mode is canceled.</summary>
      <param name="Path"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlEvents.OnObjectEditingStop(System.String)">
      <summary>Triggered when a 3D object exits the edit mode.</summary>
      <param name="Path"></param>
    </member>
    <member name="T:AGI.STKX.IAgUiAxStockRawEvents">
      <summary>AGI Map &amp; Globe control raw stock events.</summary>
    </member>
    <member name="M:AGI.STKX.IAgUiAxStockRawEvents.KeyDown(.short@,System.Int16)">
      <summary>Occurs when the user presses a key while the control has the focus.</summary>
      <param name="KeyCode"></param>
      <param name="Shift"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxStockRawEvents.KeyPress(.short@)">
      <summary>Occurs when the user presses and releases a key or key combination that corresponds to an ANSI code.</summary>
      <param name="KeyAscii"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxStockRawEvents.KeyUp(.short@,System.Int16)">
      <summary>Occurs when the user releases a key while the control has the focus.</summary>
      <param name="KeyCode"></param>
      <param name="Shift"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxStockRawEvents.Click">
      <summary>Occurs when the user presses and then releases a mouse button over the control.</summary>
    </member>
    <member name="M:AGI.STKX.IAgUiAxStockRawEvents.DblClick">
      <summary>Occurs when the user presses and releases a mouse button and then presses and releases it again over the control.</summary>
    </member>
    <member name="M:AGI.STKX.IAgUiAxStockRawEvents.MouseDown(System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Occur when the user presses a mouse button.</summary>
      <param name="Button"></param>
      <param name="Shift"></param>
      <param name="X"></param>
      <param name="Y"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxStockRawEvents.MouseMove(System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Occurs when the mouse pointer is moved across the control.</summary>
      <param name="Button"></param>
      <param name="Shift"></param>
      <param name="X"></param>
      <param name="Y"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxStockRawEvents.MouseUp(System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Occurs when the user releases a mouse button.</summary>
      <param name="Button"></param>
      <param name="Shift"></param>
      <param name="X"></param>
      <param name="Y"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxStockRawEvents.OLEDragDrop(AGI.STKX.IAgDataObject,System.Int32,System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Fired when a source component is dropped onto the control</summary>
      <param name="Data"></param>
      <param name="Effect"></param>
      <param name="Button"></param>
      <param name="Shift"></param>
      <param name="X"></param>
      <param name="Y"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxStockRawEvents.MouseWheel(System.Int16,System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Occurs when the mouse wheel is rotated on the control.</summary>
      <param name="Button"></param>
      <param name="Shift"></param>
      <param name="Delta"></param>
      <param name="X"></param>
      <param name="Y"></param>
    </member>
    <member name="T:AGI.STKX.IAgUiAxVOCntrlRawEvents">
      <summary>AGI Globe control raw events.</summary>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlRawEvents.KeyDown(.short@,System.Int16)">
      <summary>Occurs when the user presses a key while the control has the focus.</summary>
      <param name="KeyCode"></param>
      <param name="Shift"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlRawEvents.KeyPress(.short@)">
      <summary>Occurs when the user presses and releases a key or key combination that corresponds to an ANSI code.</summary>
      <param name="KeyAscii"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlRawEvents.KeyUp(.short@,System.Int16)">
      <summary>Occurs when the user releases a key while the control has the focus.</summary>
      <param name="KeyCode"></param>
      <param name="Shift"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlRawEvents.Click">
      <summary>Occurs when the user presses and then releases a mouse button over the control.</summary>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlRawEvents.DblClick">
      <summary>Occurs when the user presses and releases a mouse button and then presses and releases it again over the control.</summary>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlRawEvents.MouseDown(System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Occur when the user presses a mouse button.</summary>
      <param name="Button"></param>
      <param name="Shift"></param>
      <param name="X"></param>
      <param name="Y"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlRawEvents.MouseMove(System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Occurs when the mouse pointer is moved across the control.</summary>
      <param name="Button"></param>
      <param name="Shift"></param>
      <param name="X"></param>
      <param name="Y"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlRawEvents.MouseUp(System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Occurs when the user releases a mouse button.</summary>
      <param name="Button"></param>
      <param name="Shift"></param>
      <param name="X"></param>
      <param name="Y"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlRawEvents.OLEDragDrop(AGI.STKX.IAgDataObject,System.Int32,System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Fired when a source component is dropped onto the control</summary>
      <param name="Data"></param>
      <param name="Effect"></param>
      <param name="Button"></param>
      <param name="Shift"></param>
      <param name="X"></param>
      <param name="Y"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlRawEvents.MouseWheel(System.Int16,System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Occurs when the mouse wheel is rotated on the control.</summary>
      <param name="Button"></param>
      <param name="Shift"></param>
      <param name="Delta"></param>
      <param name="X"></param>
      <param name="Y"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlRawEvents.OnObjectEditingStart(System.String)">
      <summary>Triggered when a 3D object enters in edit mode.</summary>
      <param name="Path"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlRawEvents.OnObjectEditingApply(System.String)">
      <summary>Triggered when a 3D object editing changes are applied.</summary>
      <param name="Path"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlRawEvents.OnObjectEditingCancel(System.String)">
      <summary>Triggered when a 3D object edit mode is canceled.</summary>
      <param name="Path"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrlRawEvents.OnObjectEditingStop(System.String)">
      <summary>Triggered when a 3D object exits the edit mode.</summary>
      <param name="Path"></param>
    </member>
    <member name="T:AGI.STKX.IAgUiAxVOCntrl">
      <summary><para>The 3D Globe window control.</para><para>By default, you can use the mouse in the following ways to manipulate the 3D Graphics window:</para><list type="bullet"><item><description>Double-click the left mouse button on any spot on the globe to display the latitude and longitude of the selected spot. The latitude and longitude are shown in the scenario lat-lon units which can be found and changed in the Scenario &gt; Basic &gt; Units properties window. </description></item><item><description>Use the left mouse button to rotate the globe. </description></item><item><description>Use the right mouse button to zoom in and out. You can also zoom into a portion of the 3D Graphics window by clicking the zoom button  and then using the left mouse button to drag out a region to view on the 3D Graphics window. </description></item><item><description>Use the Shift-left mouse button to pan and tilt the virtual camera; that is, keep the camera in a fixed point in space and change its orientation. </description></item><item><description>Use the mouse and the 3D Object Editor to edit an object in the 3D Graphics window. </description></item></list><para>The mouse works as follows in Grab mode: </para><list type="bullet"><item><description>Moving the mouse while the left button is depressed rotates the globe. </description></item><item><description>Moving the mouse while the right button is depressed zooms in and out. </description></item><item><description>Moving the mouse while the left button and shift key are depressed grabs the central globe and rotates it. </description></item><item><description>When you go into Grab mode, you are placed in the lat/lon/alt view mode, if you are not already in it.</description></item></list><para>If the Constrained Up Vector is selected on the View From/To dialog box, the view may shift slightly to keep the up vector up.</para></summary>
      <remarks><para>The 3D Globe window control.</para><para>By default, you can use the mouse in the following ways to manipulate the 3D Graphics window:</para><list type="bullet"><item><description>Double-click the left mouse button on any spot on the globe to display the latitude and longitude of the selected spot. The latitude and longitude are shown in the scenario lat-lon units which can be found and changed in the Scenario &gt; Basic &gt; Units properties window. </description></item><item><description>Use the left mouse button to rotate the globe. </description></item><item><description>Use the right mouse button to zoom in and out. You can also zoom into a portion of the 3D Graphics window by clicking the zoom button  and then using the left mouse button to drag out a region to view on the 3D Graphics window. </description></item><item><description>Use the Shift-left mouse button to pan and tilt the virtual camera; that is, keep the camera in a fixed point in space and change its orientation. </description></item><item><description>Use the mouse and the 3D Object Editor to edit an object in the 3D Graphics window. </description></item></list><para>The mouse works as follows in Grab mode: </para><list type="bullet"><item><description>Moving the mouse while the left button is depressed rotates the globe. </description></item><item><description>Moving the mouse while the right button is depressed zooms in and out. </description></item><item><description>Moving the mouse while the left button and shift key are depressed grabs the central globe and rotates it. </description></item><item><description>When you go into Grab mode, you are placed in the lat/lon/alt view mode, if you are not already in it.</description></item></list><para>If the Constrained Up Vector is selected on the View From/To dialog box, the view may shift slightly to keep the up vector up.</para></remarks>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrl.PickInfo(System.Int32,System.Int32)">
      <summary>Get detailed information about a mouse pick.<para>The PickInfo method returns Primitive ID: &lt;number&gt; when the %AdvancedPickMode Property:STKXLib~AgUiAxVOCntrl~AdvancedPickMode% is set to true.</para></summary>
      <returns><para>The PickInfo method processes the point clicked during a mouse pick and returns a AgPickInfoData object which contains (if available):</para><list type="bullet"><list type="bullet"><list type="bullet"><item><description>the corresponding 3D scene latitude, longitude and altitude; </description></item><item><description>the STK object clicked.</description></item></list></list></list></returns>
      <param name="X"><para>Specifies the x-coordinate of the point in windows coordinates of the control.</para></param>
      <param name="Y"><para>Specifies the y-coordinate of the point in control coordinates.</para></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrl.ZoomIn">
      <summary>Enter zoom-in mode. User must left click-and-drag mouse to define area to zoom.<para>This method only works when MouseMode is set to automatic (default).</para></summary>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrl.RubberBandPickInfo(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Get detailed information about a rubber-band mouse pick. The values must be within the VO window (0 to width-1 for left and right, 0 to height-1 for top and bottom).<para>The RubberBandPickInfo method returns extended information when the AdvancedPickMode Property is set to true.</para></summary>
      <returns><para>Returns an object of type AgRubberBandPickInfoData which contains the list of objects selected (if any).</para></returns>
      <param name="Left"><para>Specifies the x-coordinate of the left edge of the rubber band rectangle in control coordinates.</para></param>
      <param name="Top"><para>Specifies the y-coordinate of the top edge of the rubber band rectangle in control coordinates.</para></param>
      <param name="Right"><para>Specifies the x-coordinate of the right edge of the rubber band rectangle in control coordinates.</para></param>
      <param name="Bottom"><para>Specifies the y-coordinate of the bottom edge of the rubber band rectangle in control coordinates.</para></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrl.CopyFromWinID(System.Int32)">
      <summary><para></para><para>Copies an existing window's scene into this control. The Window ID of the source window can be obtained from the WinID on this control.</para><para></para></summary>
      <param name="WinID"><para>ID of the existing window whose scene is to be copied into this control.</para></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrl.StartObjectEditing(System.String)">
      <summary>Enters into 3D object editing mode.<para>Turns on oject editing mode for an object.</para></summary>
      <param name="ObjEditPath"><para>Path to an object thatis to be edited</para></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrl.ApplyObjectEditing">
      <summary>Commits changes when in 3D object editing mode.<para>Saves changes but leaves the object in edit mode.</para></summary>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrl.StopObjectEditing(System.Boolean)">
      <summary>Ends 3D object editing mode.<para>When Canceled is set to True the object editing operation is canceled. When Canceled is set to False, the 'Edit OK' operation happens which saves the changes and turns off object editing mode.</para></summary>
      <param name="Canceled"><para>Specifies to cancel the object editing when set to True</para></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrl.SetMouseCursorFromFile(System.String)">
      <summary>Sets mouse cursor to the selected cursor file.<para>The cursor is repalced to the newly selected cursor when the mouse pointer is moved over the control.</para></summary>
      <param name="CursorFileName"><para>Complete path and file name to a cursor file.</para></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrl.RestoreMouseCursor">
      <summary>Restores mouse cursor back to normal.<para>Restores mouse cursor back to normal after it has been changed by either SetMouseCursorFromFile or SetMouseCursorFromHandle methods.</para></summary>
    </member>
    <member name="M:AGI.STKX.IAgUiAxVOCntrl.SetMouseCursorFromHandle(System.Int32)">
      <summary>Sets mouse cursor to the passed cursor handle.<para>The cursor is repalced to the newly selected cursor when the mouse pointer is moved over the control.</para></summary>
      <param name="CursorHandle"><para>A windows handle to a loaded cursor file.</para></param>
    </member>
    <member name="P:AGI.STKX.IAgUiAxVOCntrl.BackColor">
      <summary>The background color of the control.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxVOCntrl.Picture">
      <summary>The splash logo graphic to be displayed in the control.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxVOCntrl.WinID">
      <summary>Window identifier (for Connect commands).</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxVOCntrl.Application">
      <summary>Reference to the STK X application object.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxVOCntrl.NoLogo">
      <summary>If true, the splash logo is not shown.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxVOCntrl.OLEDropMode">
      <summary>How the control handles drop operations.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxVOCntrl.VendorID">
      <summary>The identifier of the vendor.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxVOCntrl.MouseMode">
      <summary>Whether this control responds to mouse events.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxVOCntrl.DrawElements">
      <summary>Elements to draw on the control.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxVOCntrl.ReadyState">
      <summary>Returns/sets the background color of the control.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxVOCntrl.PptPreloadMode">
      <summary><para>Sets/gets special mode for loading a scenario into a Globe control when it is hosted in a Powerpoint slide. When set, the loaded scenario is kept around as the user navigates back and forth between slides in a Powerpoint presentation.</para></summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxVOCntrl.AdvancedPickMode">
      <summary><para>When set to True, appends the extended information as described below to the strings returned by ObjPath property of AgPickInfoData. <para></para><para></para>- For MTO objects, track ID associated with a Multi-Track is returned. For instance: /Application/STK/Scenario/Test/MTO/tle-08747 2, where 2 is the track ID associated with a Multi-Track Object.<para></para><para></para> - For primitives, the associated primitive ID is returned.</para></summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxVOCntrl.IsObjectEditing">
      <summary>Returns true if in 3D object editing mode.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxVOCntrl.InZoomMode">
      <summary>Returns true if in zoom in mode.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxVOCntrl.ShowProgressImage">
      <summary>The animated progress image type.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxVOCntrl.ProgressImageXOffset">
      <summary>The horizontal X offset for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxVOCntrl.ProgressImageYOffset">
      <summary>The vertical Y offset for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxVOCntrl.ProgressImageFile">
      <summary>The complete image file name/path for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxVOCntrl.ProgressImageXOrigin">
      <summary>The X origin alignment for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxVOCntrl.ProgressImageYOrigin">
      <summary>The Y origin alignment for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxVOCntrl.PictureFromFile">
      <summary>The splash logo graphic file to be displayed in the control.</summary>
    </member>
    <member name="T:AGI.STKX.AgEShowProgressImage">
      <summary>Specifies to show progress image.</summary>
    </member>
    <member name="F:AGI.STKX.AgEShowProgressImage.eShowProgressImageNone">
      <summary>Do not show any progress Image.</summary>
    </member>
    <member name="F:AGI.STKX.AgEShowProgressImage.eShowProgressImageDefault">
      <summary>Show the default progress image.</summary>
    </member>
    <member name="F:AGI.STKX.AgEShowProgressImage.eShowProgressImageUser">
      <summary>Show the user specified progress image.</summary>
    </member>
    <member name="T:AGI.STKX.AgEProgressImageXOrigin">
      <summary>Specifies to align progress image X origin.</summary>
    </member>
    <member name="F:AGI.STKX.AgEProgressImageXOrigin.eProgressImageXLeft">
      <summary>Align progress Image from X left.</summary>
    </member>
    <member name="F:AGI.STKX.AgEProgressImageXOrigin.eProgressImageXRight">
      <summary>Align progress Image from X right.</summary>
    </member>
    <member name="F:AGI.STKX.AgEProgressImageXOrigin.eProgressImageXCenter">
      <summary>Align progress Image from X center.</summary>
    </member>
    <member name="T:AGI.STKX.AgEProgressImageYOrigin">
      <summary>Specifies to align progress image Y origin.</summary>
    </member>
    <member name="F:AGI.STKX.AgEProgressImageYOrigin.eProgressImageYTop">
      <summary>Align progress Image from Y top.</summary>
    </member>
    <member name="F:AGI.STKX.AgEProgressImageYOrigin.eProgressImageYBottom">
      <summary>Align progress Image from Y bottom.</summary>
    </member>
    <member name="F:AGI.STKX.AgEProgressImageYOrigin.eProgressImageYCenter">
      <summary>Align progress Image from Y center.</summary>
    </member>
    <member name="T:AGI.STKX.IAgUiAx2DCntrlEvents">
      <summary>AGI Map control events.</summary>
    </member>
    <member name="M:AGI.STKX.IAgUiAx2DCntrlEvents.KeyDown(.short@,System.Int16)">
      <summary>Occurs when the user presses a key while the control has the focus.</summary>
      <param name="KeyCode"></param>
      <param name="Shift"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAx2DCntrlEvents.KeyPress(.short@)">
      <summary>Occurs when the user presses and releases a key or key combination that corresponds to an ANSI code.</summary>
      <param name="KeyAscii"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAx2DCntrlEvents.KeyUp(.short@,System.Int16)">
      <summary>Occurs when the user releases a key while the control has the focus.</summary>
      <param name="KeyCode"></param>
      <param name="Shift"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAx2DCntrlEvents.Click">
      <summary>Occurs when the user presses and then releases a mouse button over the control.</summary>
    </member>
    <member name="M:AGI.STKX.IAgUiAx2DCntrlEvents.DblClick">
      <summary>Occurs when the user presses and releases a mouse button and then presses and releases it again over the control.</summary>
    </member>
    <member name="M:AGI.STKX.IAgUiAx2DCntrlEvents.MouseDown(System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Occur when the user presses a mouse button.</summary>
      <param name="Button"></param>
      <param name="Shift"></param>
      <param name="X"></param>
      <param name="Y"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAx2DCntrlEvents.MouseMove(System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Occurs when the mouse pointer is moved across the control.</summary>
      <param name="Button"></param>
      <param name="Shift"></param>
      <param name="X"></param>
      <param name="Y"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAx2DCntrlEvents.MouseUp(System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Occur when the user releases a mouse button.</summary>
      <param name="Button"></param>
      <param name="Shift"></param>
      <param name="X"></param>
      <param name="Y"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAx2DCntrlEvents.OLEDragDrop(AGI.STKX.IAgDataObject,System.Int32,System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Fired when a source component is dropped onto the control</summary>
      <param name="Data"></param>
      <param name="Effect"></param>
      <param name="Button"></param>
      <param name="Shift"></param>
      <param name="X"></param>
      <param name="Y"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAx2DCntrlEvents.MouseWheel(System.Int16,System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Occurs when the mouse wheel is rotated on the control.</summary>
      <param name="Button"></param>
      <param name="Shift"></param>
      <param name="Delta"></param>
      <param name="X"></param>
      <param name="Y"></param>
    </member>
    <member name="T:AGI.STKX.IAgUiAx2DCntrl">
      <summary><para>The 2D Map window control.</para><para>By default, you can use the mouse in the following ways to interact with the 2D Graphics window:</para><list type="bullet"><item><description>The latitude and longitude of the cursor position on the 2D map window is displayed in the status bar. To activate the status bar select View &gt; Status Bar from the Menu bar. The latitude and longitude are shown in the scenario lat-lon units which can be found and changed in the Scenario &gt; Basic &gt; Units properties window. </description></item><item><description>Select the Zoom In button on the default toolbar or 2D window default tool bar and drag it across the area of the 2D map window you want to zoom in to. Using the Zoom In button changes the map center. </description></item><item><description>Click on the Zoom Out button on the default toolbar or 2D window default toolbar to zoom out of the 2D window one zoom level. You can continue to click the Zoom Out button until the 2D map fills the display window. </description></item><item><description>Use the mouse scroll wheel to zoom in and out of the 2D map window. Using the mouse scroll wheel does not add any zoom levels to the zoom stack so after zooming in using the mouse scroll wheel hitting the Zoom Out button will zoom all the way out to a global view. </description></item><item><description>To move the central body in grab mode, click the Grab Globe button on the default toolbar or the 2D window default toolbar and click and drag in the 2D window. To leave grab mode, click the Grab Globe button again.</description></item></list></summary>
      <remarks><para>The 2D Map window control.</para><para>By default, you can use the mouse in the following ways to interact with the 2D Graphics window:</para><list type="bullet"><item><description>The latitude and longitude of the cursor position on the 2D map window is displayed in the status bar. To activate the status bar select View &gt; Status Bar from the Menu bar. The latitude and longitude are shown in the scenario lat-lon units which can be found and changed in the Scenario &gt; Basic &gt; Units properties window. </description></item><item><description>Select the Zoom In button on the default toolbar or 2D window default tool bar and drag it across the area of the 2D map window you want to zoom in to. Using the Zoom In button changes the map center. </description></item><item><description>Click on the Zoom Out button on the default toolbar or 2D window default toolbar to zoom out of the 2D window one zoom level. You can continue to click the Zoom Out button until the 2D map fills the display window. </description></item><item><description>Use the mouse scroll wheel to zoom in and out of the 2D map window. Using the mouse scroll wheel does not add any zoom levels to the zoom stack so after zooming in using the mouse scroll wheel hitting the Zoom Out button will zoom all the way out to a global view. </description></item><item><description>To move the central body in grab mode, click the Grab Globe button on the default toolbar or the 2D window default toolbar and click and drag in the 2D window. To leave grab mode, click the Grab Globe button again.</description></item></list></remarks>
    </member>
    <member name="M:AGI.STKX.IAgUiAx2DCntrl.ZoomIn">
      <summary>Enter zoom-in mode. User must left click-and-drag mouse to define area to zoom.<para>This methods only works when MouseMode is set to automatic (default).</para></summary>
    </member>
    <member name="M:AGI.STKX.IAgUiAx2DCntrl.ZoomOut">
      <summary>Zoom out to view a larger portion of a previously magnified map.<para>This methods only works when MouseMode is set to automatic (default).</para></summary>
    </member>
    <member name="M:AGI.STKX.IAgUiAx2DCntrl.PickInfo(System.Int32,System.Int32)">
      <summary>Get detailed information about a mouse pick.<para>Picks outside the 2D Map area are invalid.</para></summary>
      <returns><para>The PickInfo method processes the point clicked during a mouse pick and returns a AgPickInfoData object which contains (if available):</para><list type="bullet"><list type="bullet"><list type="bullet"><item><description>the corresponding map latitude, longitude and altitude; </description></item><item><description>the STK object clicked (if available).</description></item></list></list></list></returns>
      <param name="X"><para>Specifies the x-coordinate of the point in windows coordinates of the control.</para></param>
      <param name="Y"><para>Specifies the y-coordinate of the point in control coordinates.</para></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAx2DCntrl.CopyFromWinID(System.Int32)">
      <summary><para>Copies an existing window's scene into this control. The Window ID of the source window can be obtained from the WinID on this control.</para></summary>
      <param name="WinID"><para>ID of the existing window whose scene is to be copied into this control.</para></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAx2DCntrl.RubberBandPickInfo(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Get detailed information about a rubber-band mouse pick. The values must be within the 2D window (0 to width-1 for left and right, 0 to height-1 for top and bottom).<para>The RubberBandPickInfo method returns extended information when the AdvancedPickMode Property is set to true.</para></summary>
      <returns><para>Returns an object of type AgRubberBandPickInfoData which contains the list of objects selected (if any).</para></returns>
      <param name="Left"><para>Specifies the x-coordinate of the left edge of the rubber band rectangle in control coordinates.</para></param>
      <param name="Top"><para>Specifies the y-coordinate of the top edge of the rubber band rectangle in control coordinates.</para></param>
      <param name="Right"><para>Specifies the x-coordinate of the right edge of the rubber band rectangle in control coordinates.</para></param>
      <param name="Bottom"><para>Specifies the y-coordinate of the bottom edge of the rubber band rectangle in control coordinates.</para></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAx2DCntrl.GetWindowProjectedPosition(System.Double,System.Double,System.Double,AGI.STKX.AgEGfxDrawCoords)">
      <summary>Get the window projected position for given values.</summary>
      <returns><para>This method returns pixel or screen coordinate values for given latitude, longitude and altitude values.</para></returns>
      <param name="Lat"><para>Latitude in deg</para></param>
      <param name="Lon"><para>Longitude in deg</para></param>
      <param name="Alt"><para>Altitude in Connect distance unit</para></param>
      <param name="DrawCoords"><para><para> </para></para></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAx2DCntrl.SetMouseCursorFromFile(System.String)">
      <summary>Sets mouse cursor to the selected cursor file.<para>The cursor is repalced to the newly selected cursor when the mouse pointer is moved over the control.</para></summary>
      <param name="CursorFileName"><para>Complete path and file name to a cursor file.</para></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAx2DCntrl.RestoreMouseCursor">
      <summary>Restores mouse cursor back to normal.<para>Restores mouse cursor back to normal after it has been changed by either SetMouseCursorFromFile or SetMouseCursorFromHandle methods.</para></summary>
    </member>
    <member name="M:AGI.STKX.IAgUiAx2DCntrl.SetMouseCursorFromHandle(System.Int32)">
      <summary>Sets mouse cursor to the passed cursor handle.<para>The cursor is repalced to the newly selected cursor when the mouse pointer is moved over the control.</para></summary>
      <param name="CursorHandle"><para>A windows handle to a loaded cursor file.</para></param>
    </member>
    <member name="P:AGI.STKX.IAgUiAx2DCntrl.BackColor">
      <summary>The background color of the control.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAx2DCntrl.Picture">
      <summary>The splash logo graphic to be displayed in the control.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAx2DCntrl.WinID">
      <summary>Window identifier (for Connect commands).</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAx2DCntrl.Application">
      <summary>Reference to the STK X application object.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAx2DCntrl.NoLogo">
      <summary>If true, the splash logo is not shown.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAx2DCntrl.OLEDropMode">
      <summary>How the control handles drop operations.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAx2DCntrl.VendorID">
      <summary>The identifier of the vendor.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAx2DCntrl.MouseMode">
      <summary>Whether this control responds to mouse events.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAx2DCntrl.ReadyState">
      <summary>Returns/sets the background color of the control.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAx2DCntrl.AdvancedPickMode">
      <summary><para>When set to True, appends the extended information as described below to the strings returned by ObjPath property of AgPickInfoData. <para></para><para></para>- For MTO objects, track ID associated with a Multi-Track is returned. For instance: /Application/STK/Scenario/Test/MTO/tle-08747 2, where 2 is the track ID associated with a Multi-Track Object.<para></para><para></para>- For Satellites, the event ID for graphics time event is returned.</para></summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAx2DCntrl.InZoomMode">
      <summary>Returns true if in zoom in mode.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAx2DCntrl.ShowProgressImage">
      <summary>The animated progress image type.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAx2DCntrl.ProgressImageXOffset">
      <summary>The horizontal X offset for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAx2DCntrl.ProgressImageYOffset">
      <summary>The vertical Y offset for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAx2DCntrl.ProgressImageFile">
      <summary>The complete image file name/path for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAx2DCntrl.ProgressImageXOrigin">
      <summary>The X origin alignment for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAx2DCntrl.ProgressImageYOrigin">
      <summary>The Y origin alignment for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAx2DCntrl.PictureFromFile">
      <summary>The splash logo graphic file to be displayed in the control.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAx2DCntrl.PanModeEnabled">
      <summary>Enables/disables pan mode for map control.</summary>
    </member>
    <member name="T:AGI.STKX.AgEGfxDrawCoords">
      <summary>Specifies the draw coordinates for Map Control.</summary>
    </member>
    <member name="F:AGI.STKX.AgEGfxDrawCoords.ePixelDrawCoords">
      <summary>The draw coordinates values in pixels.</summary>
    </member>
    <member name="F:AGI.STKX.AgEGfxDrawCoords.eScreenDrawCoords">
      <summary>The draw coordinates values in screen coordinates.</summary>
    </member>
    <member name="T:AGI.STKX.IAgSTKXApplicationEvents">
      <summary>STK X application events.</summary>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationEvents.OnScenarioNew(System.String)">
      <summary>Triggered when a new scenario is created.</summary>
      <param name="Path"></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationEvents.OnScenarioLoad(System.String)">
      <summary>Triggered when a scenario is loaded.</summary>
      <param name="Path"></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationEvents.OnScenarioClose">
      <summary>Triggered when the current scenario is closed.</summary>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationEvents.OnScenarioSave(System.String)">
      <summary>Triggered when the current scenario is saved.</summary>
      <param name="Path"></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationEvents.OnLogMessage(System.String,AGI.STKX.AgELogMsgType,System.Int32,System.String,System.Int32,AGI.STKX.AgELogMsgDispID)">
      <summary>Triggered when a new message is logged.</summary>
      <param name="Message"></param>
      <param name="MsgType"></param>
      <param name="ErrorCode"></param>
      <param name="FileName"></param>
      <param name="LineNo"></param>
      <param name="DispID"></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationEvents.OnAnimUpdate(System.Double)">
      <summary>Occurs just before an animation update.</summary>
      <param name="TimeEpSec"></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationEvents.OnNewGlobeCtrlRequest(System.Int32)">
      <summary>Triggered when the globe control window for a scene is not found.</summary>
      <param name="SceneID"></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationEvents.OnNewMapCtrlRequest(System.Int32)">
      <summary>Triggered when the map control window for a WinID is not found.</summary>
      <param name="WinID"></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationEvents.OnBeforeNewScenario(System.String)">
      <summary>Triggered when a new scenario is about to be created.</summary>
      <param name="Scenario"></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationEvents.OnBeforeLoadScenario(System.String)">
      <summary>Triggered when a  scenario is about to be loaded.</summary>
      <param name="Scenario"></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationEvents.OnBeginScenarioClose">
      <summary>Triggered immediately before the current scenario is closed.</summary>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationEvents.OnNewGfxAnalysisCtrlRequest(System.Int32,AGI.STKX.AgEGfxAnalysisMode)">
      <summary>Triggered when the Gfx Analysis control window for a scene is not found.</summary>
      <param name="SceneID"></param>
      <param name="GfxAnalysisMode"></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationEvents.OnSSLCertificateServerError(AGI.STKX.IAgSTKXSSLCertificateErrorEventArgs)">
      <summary>Triggered when a remote Web server, in response to an HTTPS request, sends a self-signed certificate, or if the certificate misrepresents the server identify.</summary>
      <param name="pArgs"></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationEvents.OnConControlQuitReceived(AGI.STKX.IAgSTKXConControlQuitReceivedEventArgs)">
      <summary>Triggered when the [ConControl / QuitStk] connect command is received.</summary>
      <param name="pArgs"></param>
    </member>
    <member name="T:AGI.STKX.AgEGfxAnalysisMode">
      <summary>Specifies the mode of Gfx Analysis Control.</summary>
    </member>
    <member name="F:AGI.STKX.AgEGfxAnalysisMode.eSolarPanelTool">
      <summary>The Solar Panel Tool mode.</summary>
    </member>
    <member name="F:AGI.STKX.AgEGfxAnalysisMode.eAreaTool">
      <summary>The Area Tool mode.</summary>
    </member>
    <member name="F:AGI.STKX.AgEGfxAnalysisMode.eObscurationTool">
      <summary>The Obscuration Tool mode.</summary>
    </member>
    <member name="F:AGI.STKX.AgEGfxAnalysisMode.eAzElMaskTool">
      <summary>The AzElMask Tool mode.</summary>
    </member>
    <member name="T:AGI.STKX.IAgSTKXSSLCertificateErrorEventArgs">
      <summary>Provides information about an SSL certificate that is expired or invalid.</summary>
    </member>
    <member name="M:AGI.STKX.IAgSTKXSSLCertificateErrorEventArgs.SetIgnoreError(System.Boolean)">
      <summary>Specify True to ignore the certificate error and continue with establishing secure HTTP connection to the remote server.</summary>
      <param name="IgnoreError"></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXSSLCertificateErrorEventArgs.SetIgnoreErrorPermanently(System.Boolean)">
      <summary>Specify True to ignore the certificate error and add the certificate to the list of trusted certificates.</summary>
      <param name="IgnoreErrorPermanently"></param>
    </member>
    <member name="P:AGI.STKX.IAgSTKXSSLCertificateErrorEventArgs.IsErrorIgnored">
      <summary>Returns whether the invalid certificate error is ignored.</summary>
    </member>
    <member name="P:AGI.STKX.IAgSTKXSSLCertificateErrorEventArgs.SerialNumber">
      <summary>Certificate's serial number.</summary>
    </member>
    <member name="P:AGI.STKX.IAgSTKXSSLCertificateErrorEventArgs.Issuer">
      <summary>The provider who issued the certificate.</summary>
    </member>
    <member name="P:AGI.STKX.IAgSTKXSSLCertificateErrorEventArgs.Subject">
      <summary>Certificate's subject field.</summary>
    </member>
    <member name="P:AGI.STKX.IAgSTKXSSLCertificateErrorEventArgs.ValidDate">
      <summary>Certificate's valid date.</summary>
    </member>
    <member name="P:AGI.STKX.IAgSTKXSSLCertificateErrorEventArgs.ExpirationDate">
      <summary>Certificate's expiration date.</summary>
    </member>
    <member name="P:AGI.STKX.IAgSTKXSSLCertificateErrorEventArgs.IsExpired">
      <summary>Whether the certificate is expired.</summary>
    </member>
    <member name="P:AGI.STKX.IAgSTKXSSLCertificateErrorEventArgs.PEMData">
      <summary>Certificate's PEM data encoded as base-64.</summary>
    </member>
    <member name="P:AGI.STKX.IAgSTKXSSLCertificateErrorEventArgs.Handled">
      <summary>Indicates whether the event should continue be routed to the listeners. Setting Handled to true will prevent the event from reaching any remaining listeners.</summary>
    </member>
    <member name="T:AGI.STKX.IAgSTKXConControlQuitReceivedEventArgs">
      <summary>Arguments for the OnConControlQuitReceived event.</summary>
    </member>
    <member name="P:AGI.STKX.IAgSTKXConControlQuitReceivedEventArgs.Acknowledge">
      <summary>Indicates whether or not to acknowledge the connect command.</summary>
    </member>
    <member name="T:AGI.STKX.IAgSTKXApplicationRawEvents">
      <summary>STK X Application Raw Events.</summary>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationRawEvents.OnScenarioNew(System.String)">
      <summary>Triggered when a new scenario is created.</summary>
      <param name="Path"></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationRawEvents.OnScenarioLoad(System.String)">
      <summary>Triggered when a scenario is loaded.</summary>
      <param name="Path"></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationRawEvents.OnScenarioClose">
      <summary>Triggered when the current scenario is closed.</summary>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationRawEvents.OnScenarioSave(System.String)">
      <summary>Triggered when the current scenario is saved.</summary>
      <param name="Path"></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationRawEvents.OnLogMessage(System.String,AGI.STKX.AgELogMsgType,System.Int32,System.String,System.Int32,AGI.STKX.AgELogMsgDispID)">
      <summary>Triggered when a new message is logged.</summary>
      <param name="Message"></param>
      <param name="MsgType"></param>
      <param name="ErrorCode"></param>
      <param name="FileName"></param>
      <param name="LineNo"></param>
      <param name="DispID"></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationRawEvents.OnAnimUpdate(System.Double)">
      <summary>Occurs just before an animation update.</summary>
      <param name="TimeEpSec"></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationRawEvents.OnNewGlobeCtrlRequest(System.Int32)">
      <summary>Triggered when the globe control window for a scene is not found.</summary>
      <param name="SceneID"></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationRawEvents.OnNewMapCtrlRequest(System.Int32)">
      <summary>Triggered when the map control window for a WinID is not found.</summary>
      <param name="WinID"></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationRawEvents.OnBeforeNewScenario(System.String)">
      <summary>Triggered when a new scenario is about to be created.</summary>
      <param name="Scenario"></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationRawEvents.OnBeforeLoadScenario(System.String)">
      <summary>Triggered when a  scenario is about to be loaded.</summary>
      <param name="Scenario"></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationRawEvents.OnBeginScenarioClose">
      <summary>Triggered immediately before the current scenario is closed.</summary>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationRawEvents.OnNewGfxAnalysisCtrlRequest(System.Int32,AGI.STKX.AgEGfxAnalysisMode)">
      <summary>Triggered when the Gfx Analysis control window for a scene is not found.</summary>
      <param name="SceneID"></param>
      <param name="GfxAnalysisMode"></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationRawEvents.OnSSLCertificateServerError(AGI.STKX.IAgSTKXSSLCertificateErrorEventArgs)">
      <summary>Triggered when a remote Web server, in response to an HTTPS request, sends a self-signed certificate, or if the certificate misrepresents the server identify.</summary>
      <param name="pArgs"></param>
    </member>
    <member name="M:AGI.STKX.IAgSTKXApplicationRawEvents.OnConControlQuitReceived(AGI.STKX.IAgSTKXConControlQuitReceivedEventArgs)">
      <summary>Triggered when the [ConControl / QuitStk] connect command is received.</summary>
      <param name="pArgs"></param>
    </member>
    <member name="T:AGI.STKX.IAgUiAxGfxAnalysisCntrlEvents">
      <summary>AGI Gfx Analysis control events.</summary>
    </member>
    <member name="M:AGI.STKX.IAgUiAxGfxAnalysisCntrlEvents.KeyDown(.short@,System.Int16)">
      <summary>Occurs when the user presses a key while the control has the focus.</summary>
      <param name="KeyCode"></param>
      <param name="Shift"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxGfxAnalysisCntrlEvents.KeyPress(.short@)">
      <summary>Occurs when the user presses and releases a key or key combination that corresponds to an ANSI code.</summary>
      <param name="KeyAscii"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxGfxAnalysisCntrlEvents.KeyUp(.short@,System.Int16)">
      <summary>Occurs when the user releases a key while the control has the focus.</summary>
      <param name="KeyCode"></param>
      <param name="Shift"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxGfxAnalysisCntrlEvents.Click">
      <summary>Occurs when the user presses and then releases a mouse button over the control.</summary>
    </member>
    <member name="M:AGI.STKX.IAgUiAxGfxAnalysisCntrlEvents.DblClick">
      <summary>Occurs when the user presses and releases a mouse button and then presses and releases it again over the control.</summary>
    </member>
    <member name="M:AGI.STKX.IAgUiAxGfxAnalysisCntrlEvents.MouseDown(System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Occur when the user presses a mouse button.</summary>
      <param name="Button"></param>
      <param name="Shift"></param>
      <param name="X"></param>
      <param name="Y"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxGfxAnalysisCntrlEvents.MouseMove(System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Occurs when the mouse pointer is moved across the control.</summary>
      <param name="Button"></param>
      <param name="Shift"></param>
      <param name="X"></param>
      <param name="Y"></param>
    </member>
    <member name="M:AGI.STKX.IAgUiAxGfxAnalysisCntrlEvents.MouseUp(System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Occurs when the user releases a mouse button.</summary>
      <param name="Button"></param>
      <param name="Shift"></param>
      <param name="X"></param>
      <param name="Y"></param>
    </member>
    <member name="T:AGI.STKX.IAgUiAxGfxAnalysisCntrl">
      <summary>AGI Gfx Analysis control.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxGfxAnalysisCntrl.BackColor">
      <summary>The background color of the control.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxGfxAnalysisCntrl.Picture">
      <summary>The splash logo graphic to be displayed in the control.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxGfxAnalysisCntrl.NoLogo">
      <summary>If true, the splash logo is not shown.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxGfxAnalysisCntrl.VendorID">
      <summary>The identifier of the vendor.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxGfxAnalysisCntrl.ReadyState">
      <summary>Returns the ready state of the control.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxGfxAnalysisCntrl.Application">
      <summary>Reference to the STK X application object.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxGfxAnalysisCntrl.ControlMode">
      <summary>The Graphics control mode.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxGfxAnalysisCntrl.PictureFromFile">
      <summary>The splash logo graphic file to be displayed in the control.</summary>
    </member>
    <member name="P:AGI.STKX.IAgUiAxGfxAnalysisCntrl.WinID">
      <summary>Window identifier (for Connect commands).</summary>
    </member>
    <member name="T:AGI.STKX.AgUiAxVOCntrl">
      <summary><para>The 3D Globe window control.</para><para>By default, you can use the mouse in the following ways to manipulate the 3D Graphics window:</para><list type="bullet"><item><description>Double-click the left mouse button on any spot on the globe to display the latitude and longitude of the selected spot. The latitude and longitude are shown in the scenario lat-lon units which can be found and changed in the Scenario &gt; Basic &gt; Units properties window. </description></item><item><description>Use the left mouse button to rotate the globe. </description></item><item><description>Use the right mouse button to zoom in and out. You can also zoom into a portion of the 3D Graphics window by clicking the zoom button  and then using the left mouse button to drag out a region to view on the 3D Graphics window. </description></item><item><description>Use the Shift-left mouse button to pan and tilt the virtual camera; that is, keep the camera in a fixed point in space and change its orientation. </description></item><item><description>Use the mouse and the 3D Object Editor to edit an object in the 3D Graphics window. </description></item></list><para>The mouse works as follows in Grab mode: </para><list type="bullet"><item><description>Moving the mouse while the left button is depressed rotates the globe. </description></item><item><description>Moving the mouse while the right button is depressed zooms in and out. </description></item><item><description>Moving the mouse while the left button and shift key are depressed grabs the central globe and rotates it. </description></item><item><description>When you go into Grab mode, you are placed in the lat/lon/alt view mode, if you are not already in it.</description></item></list><para>If the Constrained Up Vector is selected on the View From/To dialog box, the view may shift slightly to keep the up vector up.</para></summary>
      <remarks><para>The 3D Globe window control.</para><para>By default, you can use the mouse in the following ways to manipulate the 3D Graphics window:</para><list type="bullet"><item><description>Double-click the left mouse button on any spot on the globe to display the latitude and longitude of the selected spot. The latitude and longitude are shown in the scenario lat-lon units which can be found and changed in the Scenario &gt; Basic &gt; Units properties window. </description></item><item><description>Use the left mouse button to rotate the globe. </description></item><item><description>Use the right mouse button to zoom in and out. You can also zoom into a portion of the 3D Graphics window by clicking the zoom button  and then using the left mouse button to drag out a region to view on the 3D Graphics window. </description></item><item><description>Use the Shift-left mouse button to pan and tilt the virtual camera; that is, keep the camera in a fixed point in space and change its orientation. </description></item><item><description>Use the mouse and the 3D Object Editor to edit an object in the 3D Graphics window. </description></item></list><para>The mouse works as follows in Grab mode: </para><list type="bullet"><item><description>Moving the mouse while the left button is depressed rotates the globe. </description></item><item><description>Moving the mouse while the right button is depressed zooms in and out. </description></item><item><description>Moving the mouse while the left button and shift key are depressed grabs the central globe and rotates it. </description></item><item><description>When you go into Grab mode, you are placed in the lat/lon/alt view mode, if you are not already in it.</description></item></list><para>If the Constrained Up Vector is selected on the View From/To dialog box, the view may shift slightly to keep the up vector up.</para></remarks>
    </member>
    <member name="M:AGI.STKX.AgUiAxVOCntrl.PickInfo(System.Int32,System.Int32)">
      <summary>Get detailed information about a mouse pick.<para>The PickInfo method returns Primitive ID: &lt;number&gt; when the %AdvancedPickMode Property:STKXLib~AgUiAxVOCntrl~AdvancedPickMode% is set to true.</para></summary>
      <returns><para>The PickInfo method processes the point clicked during a mouse pick and returns a AgPickInfoData object which contains (if available):</para><list type="bullet"><list type="bullet"><list type="bullet"><item><description>the corresponding 3D scene latitude, longitude and altitude; </description></item><item><description>the STK object clicked.</description></item></list></list></list></returns>
      <param name="X"><para>Specifies the x-coordinate of the point in windows coordinates of the control.</para></param>
      <param name="Y"><para>Specifies the y-coordinate of the point in control coordinates.</para></param>
    </member>
    <member name="M:AGI.STKX.AgUiAxVOCntrl.ZoomIn">
      <summary>Enter zoom-in mode. User must left click-and-drag mouse to define area to zoom.<para>This method only works when MouseMode is set to automatic (default).</para></summary>
    </member>
    <member name="M:AGI.STKX.AgUiAxVOCntrl.RubberBandPickInfo(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Get detailed information about a rubber-band mouse pick. The values must be within the VO window (0 to width-1 for left and right, 0 to height-1 for top and bottom).<para>The RubberBandPickInfo method returns extended information when the AdvancedPickMode Property is set to true.</para></summary>
      <returns><para>Returns an object of type AgRubberBandPickInfoData which contains the list of objects selected (if any).</para></returns>
      <param name="Left"><para>Specifies the x-coordinate of the left edge of the rubber band rectangle in control coordinates.</para></param>
      <param name="Top"><para>Specifies the y-coordinate of the top edge of the rubber band rectangle in control coordinates.</para></param>
      <param name="Right"><para>Specifies the x-coordinate of the right edge of the rubber band rectangle in control coordinates.</para></param>
      <param name="Bottom"><para>Specifies the y-coordinate of the bottom edge of the rubber band rectangle in control coordinates.</para></param>
    </member>
    <member name="M:AGI.STKX.AgUiAxVOCntrl.CopyFromWinID(System.Int32)">
      <summary><para></para><para>Copies an existing window's scene into this control. The Window ID of the source window can be obtained from the WinID on this control.</para><para></para></summary>
      <param name="WinID"><para>ID of the existing window whose scene is to be copied into this control.</para></param>
    </member>
    <member name="M:AGI.STKX.AgUiAxVOCntrl.StartObjectEditing(System.String)">
      <summary>Enters into 3D object editing mode.<para>Turns on oject editing mode for an object.</para></summary>
      <param name="ObjEditPath"><para>Path to an object thatis to be edited</para></param>
    </member>
    <member name="M:AGI.STKX.AgUiAxVOCntrl.ApplyObjectEditing">
      <summary>Commits changes when in 3D object editing mode.<para>Saves changes but leaves the object in edit mode.</para></summary>
    </member>
    <member name="M:AGI.STKX.AgUiAxVOCntrl.StopObjectEditing(System.Boolean)">
      <summary>Ends 3D object editing mode.<para>When Canceled is set to True the object editing operation is canceled. When Canceled is set to False, the 'Edit OK' operation happens which saves the changes and turns off object editing mode.</para></summary>
      <param name="Canceled"><para>Specifies to cancel the object editing when set to True</para></param>
    </member>
    <member name="M:AGI.STKX.AgUiAxVOCntrl.SetMouseCursorFromFile(System.String)">
      <summary>Sets mouse cursor to the selected cursor file.<para>The cursor is repalced to the newly selected cursor when the mouse pointer is moved over the control.</para></summary>
      <param name="CursorFileName"><para>Complete path and file name to a cursor file.</para></param>
    </member>
    <member name="M:AGI.STKX.AgUiAxVOCntrl.RestoreMouseCursor">
      <summary>Restores mouse cursor back to normal.<para>Restores mouse cursor back to normal after it has been changed by either SetMouseCursorFromFile or SetMouseCursorFromHandle methods.</para></summary>
    </member>
    <member name="M:AGI.STKX.AgUiAxVOCntrl.SetMouseCursorFromHandle(System.Int32)">
      <summary>Sets mouse cursor to the passed cursor handle.<para>The cursor is repalced to the newly selected cursor when the mouse pointer is moved over the control.</para></summary>
      <param name="CursorHandle"><para>A windows handle to a loaded cursor file.</para></param>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrl.BackColor">
      <summary>The background color of the control.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrl.Picture">
      <summary>The splash logo graphic to be displayed in the control.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrl.WinID">
      <summary>Window identifier (for Connect commands).</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrl.Application">
      <summary>Reference to the STK X application object.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrl.NoLogo">
      <summary>If true, the splash logo is not shown.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrl.OLEDropMode">
      <summary>How the control handles drop operations.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrl.VendorID">
      <summary>The identifier of the vendor.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrl.MouseMode">
      <summary>Whether this control responds to mouse events.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrl.DrawElements">
      <summary>Elements to draw on the control.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrl.ReadyState">
      <summary>Returns/sets the background color of the control.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrl.PptPreloadMode">
      <summary><para>Sets/gets special mode for loading a scenario into a Globe control when it is hosted in a Powerpoint slide. When set, the loaded scenario is kept around as the user navigates back and forth between slides in a Powerpoint presentation.</para></summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrl.AdvancedPickMode">
      <summary><para>When set to True, appends the extended information as described below to the strings returned by ObjPath property of AgPickInfoData. <para></para><para></para>- For MTO objects, track ID associated with a Multi-Track is returned. For instance: /Application/STK/Scenario/Test/MTO/tle-08747 2, where 2 is the track ID associated with a Multi-Track Object.<para></para><para></para> - For primitives, the associated primitive ID is returned.</para></summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrl.IsObjectEditing">
      <summary>Returns true if in 3D object editing mode.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrl.InZoomMode">
      <summary>Returns true if in zoom in mode.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrl.ShowProgressImage">
      <summary>The animated progress image type.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrl.ProgressImageXOffset">
      <summary>The horizontal X offset for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrl.ProgressImageYOffset">
      <summary>The vertical Y offset for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrl.ProgressImageFile">
      <summary>The complete image file name/path for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrl.ProgressImageXOrigin">
      <summary>The X origin alignment for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrl.ProgressImageYOrigin">
      <summary>The Y origin alignment for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrl.PictureFromFile">
      <summary>The splash logo graphic file to be displayed in the control.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAxVOCntrlEvents_Event.KeyDown">
      <summary>Occurs when the user presses a key while the control has the focus.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAxVOCntrlEvents_Event.KeyPress">
      <summary>Occurs when the user presses and releases a key or key combination that corresponds to an ANSI code.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAxVOCntrlEvents_Event.KeyUp">
      <summary>Occurs when the user releases a key while the control has the focus.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAxVOCntrlEvents_Event.Click">
      <summary>Occurs when the user presses and then releases a mouse button over the control.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAxVOCntrlEvents_Event.DblClick">
      <summary>Occurs when the user presses and releases a mouse button and then presses and releases it again over the control.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAxVOCntrlEvents_Event.MouseDown">
      <summary>Occur when the user presses a mouse button.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAxVOCntrlEvents_Event.MouseMove">
      <summary>Occurs when the mouse pointer is moved across the control.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAxVOCntrlEvents_Event.MouseUp">
      <summary>Occurs when the user releases a mouse button.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAxVOCntrlEvents_Event.OLEDragDrop">
      <summary>Fired when a source component is dropped onto the control</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAxVOCntrlEvents_Event.MouseWheel">
      <summary>Occurs when the mouse wheel is rotated on the control.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAxVOCntrlEvents_Event.OnObjectEditingStart">
      <summary>Triggered when a 3D object enters in edit mode.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAxVOCntrlEvents_Event.OnObjectEditingApply">
      <summary>Triggered when a 3D object editing changes are applied.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAxVOCntrlEvents_Event.OnObjectEditingCancel">
      <summary>Triggered when a 3D object edit mode is canceled.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAxVOCntrlEvents_Event.OnObjectEditingStop">
      <summary>Triggered when a 3D object exits the edit mode.</summary>
    </member>
    <member name="T:AGI.STKX.AgUiAxVOCntrlClass">
      <summary><para>The 3D Globe window control.</para><para>By default, you can use the mouse in the following ways to manipulate the 3D Graphics window:</para><list type="bullet"><item><description>Double-click the left mouse button on any spot on the globe to display the latitude and longitude of the selected spot. The latitude and longitude are shown in the scenario lat-lon units which can be found and changed in the Scenario &gt; Basic &gt; Units properties window. </description></item><item><description>Use the left mouse button to rotate the globe. </description></item><item><description>Use the right mouse button to zoom in and out. You can also zoom into a portion of the 3D Graphics window by clicking the zoom button  and then using the left mouse button to drag out a region to view on the 3D Graphics window. </description></item><item><description>Use the Shift-left mouse button to pan and tilt the virtual camera; that is, keep the camera in a fixed point in space and change its orientation. </description></item><item><description>Use the mouse and the 3D Object Editor to edit an object in the 3D Graphics window. </description></item></list><para>The mouse works as follows in Grab mode: </para><list type="bullet"><item><description>Moving the mouse while the left button is depressed rotates the globe. </description></item><item><description>Moving the mouse while the right button is depressed zooms in and out. </description></item><item><description>Moving the mouse while the left button and shift key are depressed grabs the central globe and rotates it. </description></item><item><description>When you go into Grab mode, you are placed in the lat/lon/alt view mode, if you are not already in it.</description></item></list><para>If the Constrained Up Vector is selected on the View From/To dialog box, the view may shift slightly to keep the up vector up.</para></summary>
      <remarks><para>The 3D Globe window control.</para><para>By default, you can use the mouse in the following ways to manipulate the 3D Graphics window:</para><list type="bullet"><item><description>Double-click the left mouse button on any spot on the globe to display the latitude and longitude of the selected spot. The latitude and longitude are shown in the scenario lat-lon units which can be found and changed in the Scenario &gt; Basic &gt; Units properties window. </description></item><item><description>Use the left mouse button to rotate the globe. </description></item><item><description>Use the right mouse button to zoom in and out. You can also zoom into a portion of the 3D Graphics window by clicking the zoom button  and then using the left mouse button to drag out a region to view on the 3D Graphics window. </description></item><item><description>Use the Shift-left mouse button to pan and tilt the virtual camera; that is, keep the camera in a fixed point in space and change its orientation. </description></item><item><description>Use the mouse and the 3D Object Editor to edit an object in the 3D Graphics window. </description></item></list><para>The mouse works as follows in Grab mode: </para><list type="bullet"><item><description>Moving the mouse while the left button is depressed rotates the globe. </description></item><item><description>Moving the mouse while the right button is depressed zooms in and out. </description></item><item><description>Moving the mouse while the left button and shift key are depressed grabs the central globe and rotates it. </description></item><item><description>When you go into Grab mode, you are placed in the lat/lon/alt view mode, if you are not already in it.</description></item></list><para>If the Constrained Up Vector is selected on the View From/To dialog box, the view may shift slightly to keep the up vector up.</para></remarks>
    </member>
    <member name="M:AGI.STKX.AgUiAxVOCntrlClass.PickInfo(System.Int32,System.Int32)">
      <summary>Get detailed information about a mouse pick.<para>The PickInfo method returns Primitive ID: &lt;number&gt; when the %AdvancedPickMode Property:STKXLib~AgUiAxVOCntrl~AdvancedPickMode% is set to true.</para></summary>
      <returns><para>The PickInfo method processes the point clicked during a mouse pick and returns a AgPickInfoData object which contains (if available):</para><list type="bullet"><list type="bullet"><list type="bullet"><item><description>the corresponding 3D scene latitude, longitude and altitude; </description></item><item><description>the STK object clicked.</description></item></list></list></list></returns>
      <param name="X"><para>Specifies the x-coordinate of the point in windows coordinates of the control.</para></param>
      <param name="Y"><para>Specifies the y-coordinate of the point in control coordinates.</para></param>
    </member>
    <member name="M:AGI.STKX.AgUiAxVOCntrlClass.ZoomIn">
      <summary>Enter zoom-in mode. User must left click-and-drag mouse to define area to zoom.<para>This method only works when MouseMode is set to automatic (default).</para></summary>
    </member>
    <member name="M:AGI.STKX.AgUiAxVOCntrlClass.RubberBandPickInfo(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Get detailed information about a rubber-band mouse pick. The values must be within the VO window (0 to width-1 for left and right, 0 to height-1 for top and bottom).<para>The RubberBandPickInfo method returns extended information when the AdvancedPickMode Property is set to true.</para></summary>
      <returns><para>Returns an object of type AgRubberBandPickInfoData which contains the list of objects selected (if any).</para></returns>
      <param name="Left"><para>Specifies the x-coordinate of the left edge of the rubber band rectangle in control coordinates.</para></param>
      <param name="Top"><para>Specifies the y-coordinate of the top edge of the rubber band rectangle in control coordinates.</para></param>
      <param name="Right"><para>Specifies the x-coordinate of the right edge of the rubber band rectangle in control coordinates.</para></param>
      <param name="Bottom"><para>Specifies the y-coordinate of the bottom edge of the rubber band rectangle in control coordinates.</para></param>
    </member>
    <member name="M:AGI.STKX.AgUiAxVOCntrlClass.CopyFromWinID(System.Int32)">
      <summary><para></para><para>Copies an existing window's scene into this control. The Window ID of the source window can be obtained from the WinID on this control.</para><para></para></summary>
      <param name="WinID"><para>ID of the existing window whose scene is to be copied into this control.</para></param>
    </member>
    <member name="M:AGI.STKX.AgUiAxVOCntrlClass.StartObjectEditing(System.String)">
      <summary>Enters into 3D object editing mode.<para>Turns on oject editing mode for an object.</para></summary>
      <param name="ObjEditPath"><para>Path to an object thatis to be edited</para></param>
    </member>
    <member name="M:AGI.STKX.AgUiAxVOCntrlClass.ApplyObjectEditing">
      <summary>Commits changes when in 3D object editing mode.<para>Saves changes but leaves the object in edit mode.</para></summary>
    </member>
    <member name="M:AGI.STKX.AgUiAxVOCntrlClass.StopObjectEditing(System.Boolean)">
      <summary>Ends 3D object editing mode.<para>When Canceled is set to True the object editing operation is canceled. When Canceled is set to False, the 'Edit OK' operation happens which saves the changes and turns off object editing mode.</para></summary>
      <param name="Canceled"><para>Specifies to cancel the object editing when set to True</para></param>
    </member>
    <member name="M:AGI.STKX.AgUiAxVOCntrlClass.SetMouseCursorFromFile(System.String)">
      <summary>Sets mouse cursor to the selected cursor file.<para>The cursor is repalced to the newly selected cursor when the mouse pointer is moved over the control.</para></summary>
      <param name="CursorFileName"><para>Complete path and file name to a cursor file.</para></param>
    </member>
    <member name="M:AGI.STKX.AgUiAxVOCntrlClass.RestoreMouseCursor">
      <summary>Restores mouse cursor back to normal.<para>Restores mouse cursor back to normal after it has been changed by either SetMouseCursorFromFile or SetMouseCursorFromHandle methods.</para></summary>
    </member>
    <member name="M:AGI.STKX.AgUiAxVOCntrlClass.SetMouseCursorFromHandle(System.Int32)">
      <summary>Sets mouse cursor to the passed cursor handle.<para>The cursor is repalced to the newly selected cursor when the mouse pointer is moved over the control.</para></summary>
      <param name="CursorHandle"><para>A windows handle to a loaded cursor file.</para></param>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrlClass.BackColor">
      <summary>The background color of the control.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrlClass.Picture">
      <summary>The splash logo graphic to be displayed in the control.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrlClass.WinID">
      <summary>Window identifier (for Connect commands).</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrlClass.Application">
      <summary>Reference to the STK X application object.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrlClass.NoLogo">
      <summary>If true, the splash logo is not shown.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrlClass.OLEDropMode">
      <summary>How the control handles drop operations.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrlClass.VendorID">
      <summary>The identifier of the vendor.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrlClass.MouseMode">
      <summary>Whether this control responds to mouse events.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrlClass.DrawElements">
      <summary>Elements to draw on the control.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrlClass.ReadyState">
      <summary>Returns/sets the background color of the control.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrlClass.PptPreloadMode">
      <summary><para>Sets/gets special mode for loading a scenario into a Globe control when it is hosted in a Powerpoint slide. When set, the loaded scenario is kept around as the user navigates back and forth between slides in a Powerpoint presentation.</para></summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrlClass.AdvancedPickMode">
      <summary><para>When set to True, appends the extended information as described below to the strings returned by ObjPath property of AgPickInfoData. <para></para><para></para>- For MTO objects, track ID associated with a Multi-Track is returned. For instance: /Application/STK/Scenario/Test/MTO/tle-08747 2, where 2 is the track ID associated with a Multi-Track Object.<para></para><para></para> - For primitives, the associated primitive ID is returned.</para></summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrlClass.IsObjectEditing">
      <summary>Returns true if in 3D object editing mode.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrlClass.InZoomMode">
      <summary>Returns true if in zoom in mode.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrlClass.ShowProgressImage">
      <summary>The animated progress image type.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrlClass.ProgressImageXOffset">
      <summary>The horizontal X offset for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrlClass.ProgressImageYOffset">
      <summary>The vertical Y offset for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrlClass.ProgressImageFile">
      <summary>The complete image file name/path for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrlClass.ProgressImageXOrigin">
      <summary>The X origin alignment for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrlClass.ProgressImageYOrigin">
      <summary>The Y origin alignment for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxVOCntrlClass.PictureFromFile">
      <summary>The splash logo graphic file to be displayed in the control.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAxVOCntrlClass.KeyDown">
      <summary>Occurs when the user presses a key while the control has the focus.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAxVOCntrlClass.KeyPress">
      <summary>Occurs when the user presses and releases a key or key combination that corresponds to an ANSI code.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAxVOCntrlClass.KeyUp">
      <summary>Occurs when the user releases a key while the control has the focus.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAxVOCntrlClass.Click">
      <summary>Occurs when the user presses and then releases a mouse button over the control.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAxVOCntrlClass.DblClick">
      <summary>Occurs when the user presses and releases a mouse button and then presses and releases it again over the control.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAxVOCntrlClass.MouseDown">
      <summary>Occur when the user presses a mouse button.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAxVOCntrlClass.MouseMove">
      <summary>Occurs when the mouse pointer is moved across the control.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAxVOCntrlClass.MouseUp">
      <summary>Occurs when the user releases a mouse button.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAxVOCntrlClass.OLEDragDrop">
      <summary>Fired when a source component is dropped onto the control</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAxVOCntrlClass.MouseWheel">
      <summary>Occurs when the mouse wheel is rotated on the control.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAxVOCntrlClass.OnObjectEditingStart">
      <summary>Triggered when a 3D object enters in edit mode.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAxVOCntrlClass.OnObjectEditingApply">
      <summary>Triggered when a 3D object editing changes are applied.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAxVOCntrlClass.OnObjectEditingCancel">
      <summary>Triggered when a 3D object edit mode is canceled.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAxVOCntrlClass.OnObjectEditingStop">
      <summary>Triggered when a 3D object exits the edit mode.</summary>
    </member>
    <member name="T:AGI.STKX.AgUiAx2DCntrl">
      <summary><para>The 2D Map window control.</para><para>By default, you can use the mouse in the following ways to interact with the 2D Graphics window:</para><list type="bullet"><item><description>The latitude and longitude of the cursor position on the 2D map window is displayed in the status bar. To activate the status bar select View &gt; Status Bar from the Menu bar. The latitude and longitude are shown in the scenario lat-lon units which can be found and changed in the Scenario &gt; Basic &gt; Units properties window. </description></item><item><description>Select the Zoom In button on the default toolbar or 2D window default tool bar and drag it across the area of the 2D map window you want to zoom in to. Using the Zoom In button changes the map center. </description></item><item><description>Click on the Zoom Out button on the default toolbar or 2D window default toolbar to zoom out of the 2D window one zoom level. You can continue to click the Zoom Out button until the 2D map fills the display window. </description></item><item><description>Use the mouse scroll wheel to zoom in and out of the 2D map window. Using the mouse scroll wheel does not add any zoom levels to the zoom stack so after zooming in using the mouse scroll wheel hitting the Zoom Out button will zoom all the way out to a global view. </description></item><item><description>To move the central body in grab mode, click the Grab Globe button on the default toolbar or the 2D window default toolbar and click and drag in the 2D window. To leave grab mode, click the Grab Globe button again.</description></item></list></summary>
      <remarks><para>The 2D Map window control.</para><para>By default, you can use the mouse in the following ways to interact with the 2D Graphics window:</para><list type="bullet"><item><description>The latitude and longitude of the cursor position on the 2D map window is displayed in the status bar. To activate the status bar select View &gt; Status Bar from the Menu bar. The latitude and longitude are shown in the scenario lat-lon units which can be found and changed in the Scenario &gt; Basic &gt; Units properties window. </description></item><item><description>Select the Zoom In button on the default toolbar or 2D window default tool bar and drag it across the area of the 2D map window you want to zoom in to. Using the Zoom In button changes the map center. </description></item><item><description>Click on the Zoom Out button on the default toolbar or 2D window default toolbar to zoom out of the 2D window one zoom level. You can continue to click the Zoom Out button until the 2D map fills the display window. </description></item><item><description>Use the mouse scroll wheel to zoom in and out of the 2D map window. Using the mouse scroll wheel does not add any zoom levels to the zoom stack so after zooming in using the mouse scroll wheel hitting the Zoom Out button will zoom all the way out to a global view. </description></item><item><description>To move the central body in grab mode, click the Grab Globe button on the default toolbar or the 2D window default toolbar and click and drag in the 2D window. To leave grab mode, click the Grab Globe button again.</description></item></list></remarks>
    </member>
    <member name="M:AGI.STKX.AgUiAx2DCntrl.ZoomIn">
      <summary>Enter zoom-in mode. User must left click-and-drag mouse to define area to zoom.<para>This methods only works when MouseMode is set to automatic (default).</para></summary>
    </member>
    <member name="M:AGI.STKX.AgUiAx2DCntrl.ZoomOut">
      <summary>Zoom out to view a larger portion of a previously magnified map.<para>This methods only works when MouseMode is set to automatic (default).</para></summary>
    </member>
    <member name="M:AGI.STKX.AgUiAx2DCntrl.PickInfo(System.Int32,System.Int32)">
      <summary>Get detailed information about a mouse pick.<para>Picks outside the 2D Map area are invalid.</para></summary>
      <returns><para>The PickInfo method processes the point clicked during a mouse pick and returns a AgPickInfoData object which contains (if available):</para><list type="bullet"><list type="bullet"><list type="bullet"><item><description>the corresponding map latitude, longitude and altitude; </description></item><item><description>the STK object clicked (if available).</description></item></list></list></list></returns>
      <param name="X"><para>Specifies the x-coordinate of the point in windows coordinates of the control.</para></param>
      <param name="Y"><para>Specifies the y-coordinate of the point in control coordinates.</para></param>
    </member>
    <member name="M:AGI.STKX.AgUiAx2DCntrl.CopyFromWinID(System.Int32)">
      <summary><para>Copies an existing window's scene into this control. The Window ID of the source window can be obtained from the WinID on this control.</para></summary>
      <param name="WinID"><para>ID of the existing window whose scene is to be copied into this control.</para></param>
    </member>
    <member name="M:AGI.STKX.AgUiAx2DCntrl.RubberBandPickInfo(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Get detailed information about a rubber-band mouse pick. The values must be within the 2D window (0 to width-1 for left and right, 0 to height-1 for top and bottom).<para>The RubberBandPickInfo method returns extended information when the AdvancedPickMode Property is set to true.</para></summary>
      <returns><para>Returns an object of type AgRubberBandPickInfoData which contains the list of objects selected (if any).</para></returns>
      <param name="Left"><para>Specifies the x-coordinate of the left edge of the rubber band rectangle in control coordinates.</para></param>
      <param name="Top"><para>Specifies the y-coordinate of the top edge of the rubber band rectangle in control coordinates.</para></param>
      <param name="Right"><para>Specifies the x-coordinate of the right edge of the rubber band rectangle in control coordinates.</para></param>
      <param name="Bottom"><para>Specifies the y-coordinate of the bottom edge of the rubber band rectangle in control coordinates.</para></param>
    </member>
    <member name="M:AGI.STKX.AgUiAx2DCntrl.GetWindowProjectedPosition(System.Double,System.Double,System.Double,AGI.STKX.AgEGfxDrawCoords)">
      <summary>Get the window projected position for given values.</summary>
      <returns><para>This method returns pixel or screen coordinate values for given latitude, longitude and altitude values.</para></returns>
      <param name="Lat"><para>Latitude in deg</para></param>
      <param name="Lon"><para>Longitude in deg</para></param>
      <param name="Alt"><para>Altitude in Connect distance unit</para></param>
      <param name="DrawCoords"><para><para> </para></para></param>
    </member>
    <member name="M:AGI.STKX.AgUiAx2DCntrl.SetMouseCursorFromFile(System.String)">
      <summary>Sets mouse cursor to the selected cursor file.<para>The cursor is repalced to the newly selected cursor when the mouse pointer is moved over the control.</para></summary>
      <param name="CursorFileName"><para>Complete path and file name to a cursor file.</para></param>
    </member>
    <member name="M:AGI.STKX.AgUiAx2DCntrl.RestoreMouseCursor">
      <summary>Restores mouse cursor back to normal.<para>Restores mouse cursor back to normal after it has been changed by either SetMouseCursorFromFile or SetMouseCursorFromHandle methods.</para></summary>
    </member>
    <member name="M:AGI.STKX.AgUiAx2DCntrl.SetMouseCursorFromHandle(System.Int32)">
      <summary>Sets mouse cursor to the passed cursor handle.<para>The cursor is repalced to the newly selected cursor when the mouse pointer is moved over the control.</para></summary>
      <param name="CursorHandle"><para>A windows handle to a loaded cursor file.</para></param>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrl.BackColor">
      <summary>The background color of the control.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrl.Picture">
      <summary>The splash logo graphic to be displayed in the control.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrl.WinID">
      <summary>Window identifier (for Connect commands).</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrl.Application">
      <summary>Reference to the STK X application object.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrl.NoLogo">
      <summary>If true, the splash logo is not shown.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrl.OLEDropMode">
      <summary>How the control handles drop operations.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrl.VendorID">
      <summary>The identifier of the vendor.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrl.MouseMode">
      <summary>Whether this control responds to mouse events.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrl.ReadyState">
      <summary>Returns/sets the background color of the control.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrl.AdvancedPickMode">
      <summary><para>When set to True, appends the extended information as described below to the strings returned by ObjPath property of AgPickInfoData. <para></para><para></para>- For MTO objects, track ID associated with a Multi-Track is returned. For instance: /Application/STK/Scenario/Test/MTO/tle-08747 2, where 2 is the track ID associated with a Multi-Track Object.<para></para><para></para>- For Satellites, the event ID for graphics time event is returned.</para></summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrl.InZoomMode">
      <summary>Returns true if in zoom in mode.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrl.ShowProgressImage">
      <summary>The animated progress image type.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrl.ProgressImageXOffset">
      <summary>The horizontal X offset for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrl.ProgressImageYOffset">
      <summary>The vertical Y offset for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrl.ProgressImageFile">
      <summary>The complete image file name/path for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrl.ProgressImageXOrigin">
      <summary>The X origin alignment for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrl.ProgressImageYOrigin">
      <summary>The Y origin alignment for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrl.PictureFromFile">
      <summary>The splash logo graphic file to be displayed in the control.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrl.PanModeEnabled">
      <summary>Enables/disables pan mode for map control.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAx2DCntrlEvents_Event.KeyDown">
      <summary>Occurs when the user presses a key while the control has the focus.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAx2DCntrlEvents_Event.KeyPress">
      <summary>Occurs when the user presses and releases a key or key combination that corresponds to an ANSI code.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAx2DCntrlEvents_Event.KeyUp">
      <summary>Occurs when the user releases a key while the control has the focus.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAx2DCntrlEvents_Event.Click">
      <summary>Occurs when the user presses and then releases a mouse button over the control.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAx2DCntrlEvents_Event.DblClick">
      <summary>Occurs when the user presses and releases a mouse button and then presses and releases it again over the control.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAx2DCntrlEvents_Event.MouseDown">
      <summary>Occur when the user presses a mouse button.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAx2DCntrlEvents_Event.MouseMove">
      <summary>Occurs when the mouse pointer is moved across the control.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAx2DCntrlEvents_Event.MouseUp">
      <summary>Occur when the user releases a mouse button.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAx2DCntrlEvents_Event.OLEDragDrop">
      <summary>Fired when a source component is dropped onto the control</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAx2DCntrlEvents_Event.MouseWheel">
      <summary>Occurs when the mouse wheel is rotated on the control.</summary>
    </member>
    <member name="T:AGI.STKX.AgUiAx2DCntrlClass">
      <summary><para>The 2D Map window control.</para><para>By default, you can use the mouse in the following ways to interact with the 2D Graphics window:</para><list type="bullet"><item><description>The latitude and longitude of the cursor position on the 2D map window is displayed in the status bar. To activate the status bar select View &gt; Status Bar from the Menu bar. The latitude and longitude are shown in the scenario lat-lon units which can be found and changed in the Scenario &gt; Basic &gt; Units properties window. </description></item><item><description>Select the Zoom In button on the default toolbar or 2D window default tool bar and drag it across the area of the 2D map window you want to zoom in to. Using the Zoom In button changes the map center. </description></item><item><description>Click on the Zoom Out button on the default toolbar or 2D window default toolbar to zoom out of the 2D window one zoom level. You can continue to click the Zoom Out button until the 2D map fills the display window. </description></item><item><description>Use the mouse scroll wheel to zoom in and out of the 2D map window. Using the mouse scroll wheel does not add any zoom levels to the zoom stack so after zooming in using the mouse scroll wheel hitting the Zoom Out button will zoom all the way out to a global view. </description></item><item><description>To move the central body in grab mode, click the Grab Globe button on the default toolbar or the 2D window default toolbar and click and drag in the 2D window. To leave grab mode, click the Grab Globe button again.</description></item></list></summary>
      <remarks><para>The 2D Map window control.</para><para>By default, you can use the mouse in the following ways to interact with the 2D Graphics window:</para><list type="bullet"><item><description>The latitude and longitude of the cursor position on the 2D map window is displayed in the status bar. To activate the status bar select View &gt; Status Bar from the Menu bar. The latitude and longitude are shown in the scenario lat-lon units which can be found and changed in the Scenario &gt; Basic &gt; Units properties window. </description></item><item><description>Select the Zoom In button on the default toolbar or 2D window default tool bar and drag it across the area of the 2D map window you want to zoom in to. Using the Zoom In button changes the map center. </description></item><item><description>Click on the Zoom Out button on the default toolbar or 2D window default toolbar to zoom out of the 2D window one zoom level. You can continue to click the Zoom Out button until the 2D map fills the display window. </description></item><item><description>Use the mouse scroll wheel to zoom in and out of the 2D map window. Using the mouse scroll wheel does not add any zoom levels to the zoom stack so after zooming in using the mouse scroll wheel hitting the Zoom Out button will zoom all the way out to a global view. </description></item><item><description>To move the central body in grab mode, click the Grab Globe button on the default toolbar or the 2D window default toolbar and click and drag in the 2D window. To leave grab mode, click the Grab Globe button again.</description></item></list></remarks>
    </member>
    <member name="M:AGI.STKX.AgUiAx2DCntrlClass.ZoomIn">
      <summary>Enter zoom-in mode. User must left click-and-drag mouse to define area to zoom.<para>This methods only works when MouseMode is set to automatic (default).</para></summary>
    </member>
    <member name="M:AGI.STKX.AgUiAx2DCntrlClass.ZoomOut">
      <summary>Zoom out to view a larger portion of a previously magnified map.<para>This methods only works when MouseMode is set to automatic (default).</para></summary>
    </member>
    <member name="M:AGI.STKX.AgUiAx2DCntrlClass.PickInfo(System.Int32,System.Int32)">
      <summary>Get detailed information about a mouse pick.<para>Picks outside the 2D Map area are invalid.</para></summary>
      <returns><para>The PickInfo method processes the point clicked during a mouse pick and returns a AgPickInfoData object which contains (if available):</para><list type="bullet"><list type="bullet"><list type="bullet"><item><description>the corresponding map latitude, longitude and altitude; </description></item><item><description>the STK object clicked (if available).</description></item></list></list></list></returns>
      <param name="X"><para>Specifies the x-coordinate of the point in windows coordinates of the control.</para></param>
      <param name="Y"><para>Specifies the y-coordinate of the point in control coordinates.</para></param>
    </member>
    <member name="M:AGI.STKX.AgUiAx2DCntrlClass.CopyFromWinID(System.Int32)">
      <summary><para>Copies an existing window's scene into this control. The Window ID of the source window can be obtained from the WinID on this control.</para></summary>
      <param name="WinID"><para>ID of the existing window whose scene is to be copied into this control.</para></param>
    </member>
    <member name="M:AGI.STKX.AgUiAx2DCntrlClass.RubberBandPickInfo(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Get detailed information about a rubber-band mouse pick. The values must be within the 2D window (0 to width-1 for left and right, 0 to height-1 for top and bottom).<para>The RubberBandPickInfo method returns extended information when the AdvancedPickMode Property is set to true.</para></summary>
      <returns><para>Returns an object of type AgRubberBandPickInfoData which contains the list of objects selected (if any).</para></returns>
      <param name="Left"><para>Specifies the x-coordinate of the left edge of the rubber band rectangle in control coordinates.</para></param>
      <param name="Top"><para>Specifies the y-coordinate of the top edge of the rubber band rectangle in control coordinates.</para></param>
      <param name="Right"><para>Specifies the x-coordinate of the right edge of the rubber band rectangle in control coordinates.</para></param>
      <param name="Bottom"><para>Specifies the y-coordinate of the bottom edge of the rubber band rectangle in control coordinates.</para></param>
    </member>
    <member name="M:AGI.STKX.AgUiAx2DCntrlClass.GetWindowProjectedPosition(System.Double,System.Double,System.Double,AGI.STKX.AgEGfxDrawCoords)">
      <summary>Get the window projected position for given values.</summary>
      <returns><para>This method returns pixel or screen coordinate values for given latitude, longitude and altitude values.</para></returns>
      <param name="Lat"><para>Latitude in deg</para></param>
      <param name="Lon"><para>Longitude in deg</para></param>
      <param name="Alt"><para>Altitude in Connect distance unit</para></param>
      <param name="DrawCoords"><para><para> </para></para></param>
    </member>
    <member name="M:AGI.STKX.AgUiAx2DCntrlClass.SetMouseCursorFromFile(System.String)">
      <summary>Sets mouse cursor to the selected cursor file.<para>The cursor is repalced to the newly selected cursor when the mouse pointer is moved over the control.</para></summary>
      <param name="CursorFileName"><para>Complete path and file name to a cursor file.</para></param>
    </member>
    <member name="M:AGI.STKX.AgUiAx2DCntrlClass.RestoreMouseCursor">
      <summary>Restores mouse cursor back to normal.<para>Restores mouse cursor back to normal after it has been changed by either SetMouseCursorFromFile or SetMouseCursorFromHandle methods.</para></summary>
    </member>
    <member name="M:AGI.STKX.AgUiAx2DCntrlClass.SetMouseCursorFromHandle(System.Int32)">
      <summary>Sets mouse cursor to the passed cursor handle.<para>The cursor is repalced to the newly selected cursor when the mouse pointer is moved over the control.</para></summary>
      <param name="CursorHandle"><para>A windows handle to a loaded cursor file.</para></param>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrlClass.BackColor">
      <summary>The background color of the control.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrlClass.Picture">
      <summary>The splash logo graphic to be displayed in the control.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrlClass.WinID">
      <summary>Window identifier (for Connect commands).</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrlClass.Application">
      <summary>Reference to the STK X application object.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrlClass.NoLogo">
      <summary>If true, the splash logo is not shown.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrlClass.OLEDropMode">
      <summary>How the control handles drop operations.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrlClass.VendorID">
      <summary>The identifier of the vendor.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrlClass.MouseMode">
      <summary>Whether this control responds to mouse events.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrlClass.ReadyState">
      <summary>Returns/sets the background color of the control.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrlClass.AdvancedPickMode">
      <summary><para>When set to True, appends the extended information as described below to the strings returned by ObjPath property of AgPickInfoData. <para></para><para></para>- For MTO objects, track ID associated with a Multi-Track is returned. For instance: /Application/STK/Scenario/Test/MTO/tle-08747 2, where 2 is the track ID associated with a Multi-Track Object.<para></para><para></para>- For Satellites, the event ID for graphics time event is returned.</para></summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrlClass.InZoomMode">
      <summary>Returns true if in zoom in mode.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrlClass.ShowProgressImage">
      <summary>The animated progress image type.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrlClass.ProgressImageXOffset">
      <summary>The horizontal X offset for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrlClass.ProgressImageYOffset">
      <summary>The vertical Y offset for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrlClass.ProgressImageFile">
      <summary>The complete image file name/path for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrlClass.ProgressImageXOrigin">
      <summary>The X origin alignment for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrlClass.ProgressImageYOrigin">
      <summary>The Y origin alignment for animated progress image.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrlClass.PictureFromFile">
      <summary>The splash logo graphic file to be displayed in the control.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAx2DCntrlClass.PanModeEnabled">
      <summary>Enables/disables pan mode for map control.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAx2DCntrlClass.KeyDown">
      <summary>Occurs when the user presses a key while the control has the focus.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAx2DCntrlClass.KeyPress">
      <summary>Occurs when the user presses and releases a key or key combination that corresponds to an ANSI code.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAx2DCntrlClass.KeyUp">
      <summary>Occurs when the user releases a key while the control has the focus.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAx2DCntrlClass.Click">
      <summary>Occurs when the user presses and then releases a mouse button over the control.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAx2DCntrlClass.DblClick">
      <summary>Occurs when the user presses and releases a mouse button and then presses and releases it again over the control.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAx2DCntrlClass.MouseDown">
      <summary>Occur when the user presses a mouse button.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAx2DCntrlClass.MouseMove">
      <summary>Occurs when the mouse pointer is moved across the control.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAx2DCntrlClass.MouseUp">
      <summary>Occur when the user releases a mouse button.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAx2DCntrlClass.OLEDragDrop">
      <summary>Fired when a source component is dropped onto the control</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAx2DCntrlClass.MouseWheel">
      <summary>Occurs when the mouse wheel is rotated on the control.</summary>
    </member>
    <member name="T:AGI.STKX.AgPickInfoData">
      <summary>Single mouse pick result.</summary>
      <remarks><para>This object is not creatable. It is used as the return value from the Map PickInfo and Globe PickInfo methods.</para><para>Note: The PickInfo() method caches its return value (for better performance). If you make multiple calls to that method, you need to extract the results from the AgPickInfoData object before making the next call, e.g.</para><para>Dim point1 As AgPickInfoData<para></para>Dim point2 As AgPickInfoData<para></para>point1 = Me.m_StkxGlobe.PickInfo(x1, y1)<para></para>point2 = Me.m_StkxGlobe.PickInfo(x2, y2)<para></para>... </para><para>At this juncture point1 and point2 both reference the same object and share the same values. To avoid this, extract the values from the result before making the second call, i.e.</para><para>Dim point As AgPickInfoData<para></para>point = Me.m_StkxGlobe.PickInfo(x1, y1)<para></para>lat1 = point.Lat<para></para>lon1 = point.Lon<para></para>point = Me.m_StkxGlobe.PickInfo(x2, y2)<para></para>lat2 = point.Lat<para></para>lon3 = point.Lon<para></para>... </para></remarks>
    </member>
    <member name="P:AGI.STKX.AgPickInfoData.ObjPath">
      <summary>Path of the STK object picked if any (or empty string).</summary>
    </member>
    <member name="P:AGI.STKX.AgPickInfoData.Lat">
      <summary>Latitude of point clicked (if available).</summary>
    </member>
    <member name="P:AGI.STKX.AgPickInfoData.Lon">
      <summary>Longitude of point clicked (if available).</summary>
    </member>
    <member name="P:AGI.STKX.AgPickInfoData.Alt">
      <summary>Altitude of point clicked (if available).</summary>
    </member>
    <member name="P:AGI.STKX.AgPickInfoData.IsObjPathValid">
      <summary>Indicate if the ObjPath property is valid.</summary>
    </member>
    <member name="P:AGI.STKX.AgPickInfoData.IsLatLonAltValid">
      <summary>Indicate if the Lat/Lon/Alt properties are valid.</summary>
    </member>
    <member name="T:AGI.STKX.AgPickInfoDataClass">
      <summary>Single mouse pick result.</summary>
      <remarks><para>This object is not creatable. It is used as the return value from the Map PickInfo and Globe PickInfo methods.</para><para>Note: The PickInfo() method caches its return value (for better performance). If you make multiple calls to that method, you need to extract the results from the AgPickInfoData object before making the next call, e.g.</para><para>Dim point1 As AgPickInfoData<para></para>Dim point2 As AgPickInfoData<para></para>point1 = Me.m_StkxGlobe.PickInfo(x1, y1)<para></para>point2 = Me.m_StkxGlobe.PickInfo(x2, y2)<para></para>... </para><para>At this juncture point1 and point2 both reference the same object and share the same values. To avoid this, extract the values from the result before making the second call, i.e.</para><para>Dim point As AgPickInfoData<para></para>point = Me.m_StkxGlobe.PickInfo(x1, y1)<para></para>lat1 = point.Lat<para></para>lon1 = point.Lon<para></para>point = Me.m_StkxGlobe.PickInfo(x2, y2)<para></para>lat2 = point.Lat<para></para>lon3 = point.Lon<para></para>... </para></remarks>
    </member>
    <member name="P:AGI.STKX.AgPickInfoDataClass.ObjPath">
      <summary>Path of the STK object picked if any (or empty string).</summary>
    </member>
    <member name="P:AGI.STKX.AgPickInfoDataClass.Lat">
      <summary>Latitude of point clicked (if available).</summary>
    </member>
    <member name="P:AGI.STKX.AgPickInfoDataClass.Lon">
      <summary>Longitude of point clicked (if available).</summary>
    </member>
    <member name="P:AGI.STKX.AgPickInfoDataClass.Alt">
      <summary>Altitude of point clicked (if available).</summary>
    </member>
    <member name="P:AGI.STKX.AgPickInfoDataClass.IsObjPathValid">
      <summary>Indicate if the ObjPath property is valid.</summary>
    </member>
    <member name="P:AGI.STKX.AgPickInfoDataClass.IsLatLonAltValid">
      <summary>Indicate if the Lat/Lon/Alt properties are valid.</summary>
    </member>
    <member name="T:AGI.STKX.AgSTKXApplication">
      <summary>STK X Application object.</summary>
    </member>
    <member name="M:AGI.STKX.AgSTKXApplication.ExecuteCommand(System.String)">
      <summary>Send a connect command to STK X.<para>Following is a brief description of the basic format for data sent to and from Connect. Syntax for each command is explained briefly. Syntax specifies the order in which you must generate a Connect command as well as any parameters and switches associated with the command.</para>    Input Command Format to Connect<para>Commands sent to Connect use the following format:</para>&lt;CommandName&gt; &lt;ObjectPath&gt; [&lt;CommandData&gt;] <para>NOTE: Although the <para>&lt;CommandName&gt;</para> field isn't case sensitive, the <para>&lt;ObjectPath&gt;</para> is. <para>&lt;CommandData&gt;</para> may or may not be case sensitive. </para><para>where:</para><para>Syntax,Description,</para><para><para>&lt;CommandName&gt;</para>,The name of a particular command (e.g., Load).,</para><para><para>&lt;ObjectPath&gt;</para>,The object (e.g., <para>Scenario/stkDemo/Satellite/Shuttle</para>) to which the <para>&lt;CommandName&gt;</para> directs action. ,</para><para><para>[&lt;CommandData&gt;]</para>,<para>&lt;CommandData&gt;</para> fields modify a <para>&lt;CommandName&gt;</para> and may or may not be required. Please refer to the format of the individual commands for additional information.,</para><para>NOTE: Since only one scenario can be open at any given time in STK, you can substitute the scenario name with a wildcard (<para>*</para>) so that the <para>&lt;ObjectPath&gt;</para> is <para>Scenario/*</para> or just <para>*</para>. For example, you could type <para>Scenario/*</para> for Scenario/stkDemo, where <para>*</para> refers to the scenario loaded.</para>    Output<para>If the command succeeds, the return value contains the list of strings.</para><para>If the command fails, a COM exception is raised (error code: 0x80040002, text: Command Failed). To implement error processing you need to handle this exception. This varies from language to language:</para><para></para><list type="bullet"><item><description>in the .NET languages you need to catch an exception of type System.Runtime.InteropServices.COMException. </description></item></list><para>                  Try<para></para>                      Me.AxAgUiAxVOCntrl1.Application.ExecuteCommand(Bad command)<para></para>                  Catch ex As System.Runtime.InteropServices.COMException<para></para>                      MsgBox(The command failed:  &amp; ex.ErrorCode &amp;  [ &amp; ex.Message &amp; ])<para></para>                  End Try<para></para></para></summary>
      <returns><para>If the command succeeds, a collection of strings (AgExecCmdResult object) is returned.</para><para>If the command fails, an automation exception is raised (error code: 0x80040002, text: Command Failed).</para></returns>
      <param name="Command"><para>Connect command to execute. For instance: New / Scenario Scenario1.</para></param>
    </member>
    <member name="M:AGI.STKX.AgSTKXApplication.GetLicensingReport">
      <summary>Returns a formatted string that contains the license names and their states. The string is formatted as an XML document.<para>This method is available for debugging/tech support purposes. You should not need to use this unless troubleshooting a problem.</para></summary>
      <returns><para>Returns an XML string describing the available licenses.</para></returns>
    </member>
    <member name="M:AGI.STKX.AgSTKXApplication.SetOnlineOptions(System.Boolean,System.String,System.Int32,System.String,System.String,System.Boolean)">
      <summary><para>Sets http proxy online options.</para><para>Use SetOnlineOptions to specify the correct Server and Port information and, optionally, a proxy username and password. Use this option if your internet access is via a firewall. If you are unsure how your internet connection is configured, please consult your system administrator.</para></summary>
      <returns><para>Returns True if the values were set successfully; otherwise returns False.</para></returns>
      <param name="UseProxy"><para>If set to True, the proxy information is used/set.</para></param>
      <param name="ServerName"><para>Server name or IP address of the HTTP server.</para></param>
      <param name="PortNum"><para>Port number used for proxy.</para></param>
      <param name="UserName"><para>User name for proxy server</para></param>
      <param name="Password"><para>Password for proxy server.</para></param>
      <param name="SavePassword"><para>If set to True, password is saved.</para></param>
    </member>
    <member name="M:AGI.STKX.AgSTKXApplication.GetOnlineOptions(.VARIANT_BOOL@,.BSTR@,.long@,.BSTR@)">
      <summary><para>Retrieves http proxy online options.</para></summary>
      <returns><para>Returns True if the values were retrieved successfully; otherwise returns False.</para></returns>
      <param name="UseProxy"><para>If True is returned, the proxy information was used.</para></param>
      <param name="ServerName"><para>Server name or IP address of the HTTP server.</para></param>
      <param name="PortNum"><para>Port number used for proxy.</para></param>
      <param name="UserName"><para>User name for proxy server.</para></param>
    </member>
    <member name="M:AGI.STKX.AgSTKXApplication.SetConnectHandler(System.String,System.String)">
      <summary>Set callback to handle a certain connect command</summary>
      <param name="CommandID"></param>
      <param name="ProgID"></param>
    </member>
    <member name="M:AGI.STKX.AgSTKXApplication.ExecuteMultipleCommands(System.Array@,AGI.STKX.AgEExecMultiCmdResultAction)">
      <summary><para>Allows the batch processing of multiple connect commands. </para><para>HRESULT ExecuteMultipleCommands(<para></para>[in] SAFEARRAY(VARIANT)* ConnectCommands, <para></para>[in] enum AgEExecMultiCmdResultAction eAction, <para></para>[out, retval] IAgExecMultiCmdResult** ppResult);</para></summary>
      <returns><para>ppResult - upon return, contains a pointer to the IAgExecMultiCmdResult object. Instances of IAgExecMultiCmdResult allow users to access the status and results of each command.</para></returns>
      <param name="ConnectCommands"><para>an array of Connect commands.</para></param>
      <param name="EAction"><para>Bitmask specifies flags used to control the behavior of the method when an error occurs<para></para>while executing a command. Sometimes it is desirable to stop the batch processing immediatelly<para></para>or continue running the remaining commands in the batch.</para></param>
    </member>
    <member name="M:AGI.STKX.AgSTKXApplication.IsFeatureAvailable(AGI.STKX.AgEFeatureCodes)">
      <summary>Returns true if the specified feature is available.</summary>
      <param name="FeatureCode"><para>The feature to be checked.</para></param>
    </member>
    <member name="M:AGI.STKX.AgSTKXApplication.Terminate">
      <summary>Terminates the use of STK Engine. This must be the last call to STK Engine.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXApplication.EnableConnect">
      <summary>Enable or disable TCP/IP connect command processing (default: disabled).</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXApplication.ConnectPort">
      <summary>Specify TCP/IP port to be used by Connect (default: 5001).</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXApplication.HostID">
      <summary>Returns the Host ID.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXApplication.RegistrationID">
      <summary>Returns the Registration ID.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXApplication.Version">
      <summary>Returns the version number</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXApplication.VendorID">
      <summary>The identifier of the vendor.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXApplication.LogFileFullName">
      <summary><para>Returns the full path and log file  name (empty if logging is not active).</para></summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXApplication.LoggingMode">
      <summary><para>Sets or retrieves the logging mode (Active, Inactive, ActiveKeepFile).<para></para></para></summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXApplication.ConnectMaxConnections">
      <summary><para>Specifies the maximum number of simultaneous Connect connections to be accepted by STK X. The maximum number of connections is constrained by the Integration Module license.</para></summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXApplication.NoGraphics">
      <summary>Start engine with or without graphics (default: engine starts with graphics.).</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXApplication.ShowSLAIfNotAccepted">
      <summary>Shows the Software License Agreement dialog if not already accepted.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXApplication.UseHook">
      <summary>Start engine with or without message hook setup (default: engine starts with message hook setup.).</summary>
    </member>
    <member name="E:AGI.STKX.IAgSTKXApplicationEvents_Event.OnScenarioNew">
      <summary>Triggered when a new scenario is created.</summary>
    </member>
    <member name="E:AGI.STKX.IAgSTKXApplicationEvents_Event.OnScenarioLoad">
      <summary>Triggered when a scenario is loaded.</summary>
    </member>
    <member name="E:AGI.STKX.IAgSTKXApplicationEvents_Event.OnScenarioClose">
      <summary>Triggered when the current scenario is closed.</summary>
    </member>
    <member name="E:AGI.STKX.IAgSTKXApplicationEvents_Event.OnScenarioSave">
      <summary>Triggered when the current scenario is saved.</summary>
    </member>
    <member name="E:AGI.STKX.IAgSTKXApplicationEvents_Event.OnLogMessage">
      <summary>Triggered when a new message is logged.</summary>
    </member>
    <member name="E:AGI.STKX.IAgSTKXApplicationEvents_Event.OnAnimUpdate">
      <summary>Occurs just before an animation update.</summary>
    </member>
    <member name="E:AGI.STKX.IAgSTKXApplicationEvents_Event.OnNewGlobeCtrlRequest">
      <summary>Triggered when the globe control window for a scene is not found.</summary>
    </member>
    <member name="E:AGI.STKX.IAgSTKXApplicationEvents_Event.OnNewMapCtrlRequest">
      <summary>Triggered when the map control window for a WinID is not found.</summary>
    </member>
    <member name="E:AGI.STKX.IAgSTKXApplicationEvents_Event.OnBeforeNewScenario">
      <summary>Triggered when a new scenario is about to be created.</summary>
    </member>
    <member name="E:AGI.STKX.IAgSTKXApplicationEvents_Event.OnBeforeLoadScenario">
      <summary>Triggered when a  scenario is about to be loaded.</summary>
    </member>
    <member name="E:AGI.STKX.IAgSTKXApplicationEvents_Event.OnBeginScenarioClose">
      <summary>Triggered immediately before the current scenario is closed.</summary>
    </member>
    <member name="E:AGI.STKX.IAgSTKXApplicationEvents_Event.OnNewGfxAnalysisCtrlRequest">
      <summary>Triggered when the Gfx Analysis control window for a scene is not found.</summary>
    </member>
    <member name="E:AGI.STKX.IAgSTKXApplicationEvents_Event.OnSSLCertificateServerError">
      <summary>Triggered when a remote Web server, in response to an HTTPS request, sends a self-signed certificate, or if the certificate misrepresents the server identify.</summary>
    </member>
    <member name="E:AGI.STKX.IAgSTKXApplicationEvents_Event.OnConControlQuitReceived">
      <summary>Triggered when the [ConControl / QuitStk] connect command is received.</summary>
    </member>
    <member name="T:AGI.STKX.AgSTKXApplicationClass">
      <summary>STK X Application object.</summary>
    </member>
    <member name="M:AGI.STKX.AgSTKXApplicationClass.ExecuteCommand(System.String)">
      <summary>Send a connect command to STK X.<para>Following is a brief description of the basic format for data sent to and from Connect. Syntax for each command is explained briefly. Syntax specifies the order in which you must generate a Connect command as well as any parameters and switches associated with the command.</para>    Input Command Format to Connect<para>Commands sent to Connect use the following format:</para>&lt;CommandName&gt; &lt;ObjectPath&gt; [&lt;CommandData&gt;] <para>NOTE: Although the <para>&lt;CommandName&gt;</para> field isn't case sensitive, the <para>&lt;ObjectPath&gt;</para> is. <para>&lt;CommandData&gt;</para> may or may not be case sensitive. </para><para>where:</para><para>Syntax,Description,</para><para><para>&lt;CommandName&gt;</para>,The name of a particular command (e.g., Load).,</para><para><para>&lt;ObjectPath&gt;</para>,The object (e.g., <para>Scenario/stkDemo/Satellite/Shuttle</para>) to which the <para>&lt;CommandName&gt;</para> directs action. ,</para><para><para>[&lt;CommandData&gt;]</para>,<para>&lt;CommandData&gt;</para> fields modify a <para>&lt;CommandName&gt;</para> and may or may not be required. Please refer to the format of the individual commands for additional information.,</para><para>NOTE: Since only one scenario can be open at any given time in STK, you can substitute the scenario name with a wildcard (<para>*</para>) so that the <para>&lt;ObjectPath&gt;</para> is <para>Scenario/*</para> or just <para>*</para>. For example, you could type <para>Scenario/*</para> for Scenario/stkDemo, where <para>*</para> refers to the scenario loaded.</para>    Output<para>If the command succeeds, the return value contains the list of strings.</para><para>If the command fails, a COM exception is raised (error code: 0x80040002, text: Command Failed). To implement error processing you need to handle this exception. This varies from language to language:</para><para></para><list type="bullet"><item><description>in the .NET languages you need to catch an exception of type System.Runtime.InteropServices.COMException. </description></item></list><para>                  Try<para></para>                      Me.AxAgUiAxVOCntrl1.Application.ExecuteCommand(Bad command)<para></para>                  Catch ex As System.Runtime.InteropServices.COMException<para></para>                      MsgBox(The command failed:  &amp; ex.ErrorCode &amp;  [ &amp; ex.Message &amp; ])<para></para>                  End Try<para></para></para></summary>
      <returns><para>If the command succeeds, a collection of strings (AgExecCmdResult object) is returned.</para><para>If the command fails, an automation exception is raised (error code: 0x80040002, text: Command Failed).</para></returns>
      <param name="Command"><para>Connect command to execute. For instance: New / Scenario Scenario1.</para></param>
    </member>
    <member name="M:AGI.STKX.AgSTKXApplicationClass.GetLicensingReport">
      <summary>Returns a formatted string that contains the license names and their states. The string is formatted as an XML document.<para>This method is available for debugging/tech support purposes. You should not need to use this unless troubleshooting a problem.</para></summary>
      <returns><para>Returns an XML string describing the available licenses.</para></returns>
    </member>
    <member name="M:AGI.STKX.AgSTKXApplicationClass.SetOnlineOptions(System.Boolean,System.String,System.Int32,System.String,System.String,System.Boolean)">
      <summary><para>Sets http proxy online options.</para><para>Use SetOnlineOptions to specify the correct Server and Port information and, optionally, a proxy username and password. Use this option if your internet access is via a firewall. If you are unsure how your internet connection is configured, please consult your system administrator.</para></summary>
      <returns><para>Returns True if the values were set successfully; otherwise returns False.</para></returns>
      <param name="UseProxy"><para>If set to True, the proxy information is used/set.</para></param>
      <param name="ServerName"><para>Server name or IP address of the HTTP server.</para></param>
      <param name="PortNum"><para>Port number used for proxy.</para></param>
      <param name="UserName"><para>User name for proxy server</para></param>
      <param name="Password"><para>Password for proxy server.</para></param>
      <param name="SavePassword"><para>If set to True, password is saved.</para></param>
    </member>
    <member name="M:AGI.STKX.AgSTKXApplicationClass.GetOnlineOptions(.VARIANT_BOOL@,.BSTR@,.long@,.BSTR@)">
      <summary><para>Retrieves http proxy online options.</para></summary>
      <returns><para>Returns True if the values were retrieved successfully; otherwise returns False.</para></returns>
      <param name="UseProxy"><para>If True is returned, the proxy information was used.</para></param>
      <param name="ServerName"><para>Server name or IP address of the HTTP server.</para></param>
      <param name="PortNum"><para>Port number used for proxy.</para></param>
      <param name="UserName"><para>User name for proxy server.</para></param>
    </member>
    <member name="M:AGI.STKX.AgSTKXApplicationClass.SetConnectHandler(System.String,System.String)">
      <summary>Set callback to handle a certain connect command</summary>
      <param name="CommandID"></param>
      <param name="ProgID"></param>
    </member>
    <member name="M:AGI.STKX.AgSTKXApplicationClass.ExecuteMultipleCommands(System.Array@,AGI.STKX.AgEExecMultiCmdResultAction)">
      <summary><para>Allows the batch processing of multiple connect commands. </para><para>HRESULT ExecuteMultipleCommands(<para></para>[in] SAFEARRAY(VARIANT)* ConnectCommands, <para></para>[in] enum AgEExecMultiCmdResultAction eAction, <para></para>[out, retval] IAgExecMultiCmdResult** ppResult);</para></summary>
      <returns><para>ppResult - upon return, contains a pointer to the IAgExecMultiCmdResult object. Instances of IAgExecMultiCmdResult allow users to access the status and results of each command.</para></returns>
      <param name="ConnectCommands"><para>an array of Connect commands.</para></param>
      <param name="EAction"><para>Bitmask specifies flags used to control the behavior of the method when an error occurs<para></para>while executing a command. Sometimes it is desirable to stop the batch processing immediatelly<para></para>or continue running the remaining commands in the batch.</para></param>
    </member>
    <member name="M:AGI.STKX.AgSTKXApplicationClass.IsFeatureAvailable(AGI.STKX.AgEFeatureCodes)">
      <summary>Returns true if the specified feature is available.</summary>
      <param name="FeatureCode"><para>The feature to be checked.</para></param>
    </member>
    <member name="M:AGI.STKX.AgSTKXApplicationClass.Terminate">
      <summary>Terminates the use of STK Engine. This must be the last call to STK Engine.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXApplicationClass.EnableConnect">
      <summary>Enable or disable TCP/IP connect command processing (default: disabled).</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXApplicationClass.ConnectPort">
      <summary>Specify TCP/IP port to be used by Connect (default: 5001).</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXApplicationClass.HostID">
      <summary>Returns the Host ID.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXApplicationClass.RegistrationID">
      <summary>Returns the Registration ID.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXApplicationClass.Version">
      <summary>Returns the version number</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXApplicationClass.VendorID">
      <summary>The identifier of the vendor.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXApplicationClass.LogFileFullName">
      <summary><para>Returns the full path and log file  name (empty if logging is not active).</para></summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXApplicationClass.LoggingMode">
      <summary><para>Sets or retrieves the logging mode (Active, Inactive, ActiveKeepFile).<para></para></para></summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXApplicationClass.ConnectMaxConnections">
      <summary><para>Specifies the maximum number of simultaneous Connect connections to be accepted by STK X. The maximum number of connections is constrained by the Integration Module license.</para></summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXApplicationClass.NoGraphics">
      <summary>Start engine with or without graphics (default: engine starts with graphics.).</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXApplicationClass.ShowSLAIfNotAccepted">
      <summary>Shows the Software License Agreement dialog if not already accepted.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXApplicationClass.UseHook">
      <summary>Start engine with or without message hook setup (default: engine starts with message hook setup.).</summary>
    </member>
    <member name="E:AGI.STKX.AgSTKXApplicationClass.OnScenarioNew">
      <summary>Triggered when a new scenario is created.</summary>
    </member>
    <member name="E:AGI.STKX.AgSTKXApplicationClass.OnScenarioLoad">
      <summary>Triggered when a scenario is loaded.</summary>
    </member>
    <member name="E:AGI.STKX.AgSTKXApplicationClass.OnScenarioClose">
      <summary>Triggered when the current scenario is closed.</summary>
    </member>
    <member name="E:AGI.STKX.AgSTKXApplicationClass.OnScenarioSave">
      <summary>Triggered when the current scenario is saved.</summary>
    </member>
    <member name="E:AGI.STKX.AgSTKXApplicationClass.OnLogMessage">
      <summary>Triggered when a new message is logged.</summary>
    </member>
    <member name="E:AGI.STKX.AgSTKXApplicationClass.OnAnimUpdate">
      <summary>Occurs just before an animation update.</summary>
    </member>
    <member name="E:AGI.STKX.AgSTKXApplicationClass.OnNewGlobeCtrlRequest">
      <summary>Triggered when the globe control window for a scene is not found.</summary>
    </member>
    <member name="E:AGI.STKX.AgSTKXApplicationClass.OnNewMapCtrlRequest">
      <summary>Triggered when the map control window for a WinID is not found.</summary>
    </member>
    <member name="E:AGI.STKX.AgSTKXApplicationClass.OnBeforeNewScenario">
      <summary>Triggered when a new scenario is about to be created.</summary>
    </member>
    <member name="E:AGI.STKX.AgSTKXApplicationClass.OnBeforeLoadScenario">
      <summary>Triggered when a  scenario is about to be loaded.</summary>
    </member>
    <member name="E:AGI.STKX.AgSTKXApplicationClass.OnBeginScenarioClose">
      <summary>Triggered immediately before the current scenario is closed.</summary>
    </member>
    <member name="E:AGI.STKX.AgSTKXApplicationClass.OnNewGfxAnalysisCtrlRequest">
      <summary>Triggered when the Gfx Analysis control window for a scene is not found.</summary>
    </member>
    <member name="E:AGI.STKX.AgSTKXApplicationClass.OnSSLCertificateServerError">
      <summary>Triggered when a remote Web server, in response to an HTTPS request, sends a self-signed certificate, or if the certificate misrepresents the server identify.</summary>
    </member>
    <member name="E:AGI.STKX.AgSTKXApplicationClass.OnConControlQuitReceived">
      <summary>Triggered when the [ConControl / QuitStk] connect command is received.</summary>
    </member>
    <member name="T:AGI.STKX.AgDataObject">
      <summary>Data Object for OLE drag &amp; drop operations.</summary>
      <remarks><para>This object is not creatable. It is passed as an argument to the Map OLEDragDrop and Globe OLEDragDrop event procedures.</para></remarks>
    </member>
    <member name="P:AGI.STKX.AgDataObject.Files">
      <summary>Returns a collection of filenames.</summary>
    </member>
    <member name="T:AGI.STKX.AgDataObjectClass">
      <summary>Data Object for OLE drag &amp; drop operations.</summary>
      <remarks><para>This object is not creatable. It is passed as an argument to the Map OLEDragDrop and Globe OLEDragDrop event procedures.</para></remarks>
    </member>
    <member name="P:AGI.STKX.AgDataObjectClass.Files">
      <summary>Returns a collection of filenames.</summary>
    </member>
    <member name="T:AGI.STKX.AgDataObjectFiles">
      <summary>Collection of files for OLE drag &amp; drop operations.</summary>
      <remarks><para>This object is not creatable. It is used in the Map OLEDragDrop and Globe OLEDragDrop event procedures, through the Files property of the DataObject argument.</para></remarks>
    </member>
    <member name="P:AGI.STKX.AgDataObjectFiles._NewEnum">
      <summary>Returns an object that can be used to iterate through all the file names in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.AgDataObjectFiles.Item">
      <summary>Gets the file name at the specified index (0-based).</summary>
    </member>
    <member name="P:AGI.STKX.AgDataObjectFiles.Count">
      <summary>Number of file names contained in the collection.</summary>
    </member>
    <member name="T:AGI.STKX.AgDataObjectFilesClass">
      <summary>Collection of files for OLE drag &amp; drop operations.</summary>
      <remarks><para>This object is not creatable. It is used in the Map OLEDragDrop and Globe OLEDragDrop event procedures, through the Files property of the DataObject argument.</para></remarks>
    </member>
    <member name="P:AGI.STKX.AgDataObjectFilesClass._NewEnum">
      <summary>Returns an object that can be used to iterate through all the file names in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.AgDataObjectFilesClass.Item">
      <summary>Gets the file name at the specified index (0-based).</summary>
    </member>
    <member name="P:AGI.STKX.AgDataObjectFilesClass.Count">
      <summary>Number of file names contained in the collection.</summary>
    </member>
    <member name="T:AGI.STKX.AgRubberBandPickInfoData">
      <summary>Rubber-band mouse pick result.</summary>
      <remarks><para>This object is not creatable. It is used as the return value from the Globe control RubberBandPickInfo method.</para></remarks>
    </member>
    <member name="P:AGI.STKX.AgRubberBandPickInfoData.ObjPaths">
      <summary>List of object paths selected.</summary>
    </member>
    <member name="T:AGI.STKX.AgRubberBandPickInfoDataClass">
      <summary>Rubber-band mouse pick result.</summary>
      <remarks><para>This object is not creatable. It is used as the return value from the Globe control RubberBandPickInfo method.</para></remarks>
    </member>
    <member name="P:AGI.STKX.AgRubberBandPickInfoDataClass.ObjPaths">
      <summary>List of object paths selected.</summary>
    </member>
    <member name="T:AGI.STKX.AgObjPathCollection">
      <summary>Collection of object paths.</summary>
      <remarks><para>This object is not creatable. It is used for the ObjPaths property of the AgRubberBandPickInfoData object.</para></remarks>
    </member>
    <member name="M:AGI.STKX.AgObjPathCollection.Range(System.Int32,System.Int32)">
      <summary>Return the elements within the specified range.<para>The purpose of this method is to avoid marshalling round-trips (marshalling occurs when the STK X controls are used in .NET or Java).</para><para>If the collection contains lots of elements, iterating using the For Each statement or the Item method may be slow. Using the Range method enables you to transfer several elements in one round-trip improving performance.</para></summary>
      <returns><para>Array of variants [COM] or objects [.NET].</para></returns>
      <param name="StartIndex"><para>Start position of the range. one represents the first element of the collection.</para></param>
      <param name="StopIndex"><para>End position of the range. The Count property represents the last element of the collection.</para></param>
    </member>
    <member name="P:AGI.STKX.AgObjPathCollection.Count">
      <summary>Number of elements contained in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.AgObjPathCollection.Item">
      <summary>Gets the element at the specified index (0-based).</summary>
    </member>
    <member name="P:AGI.STKX.AgObjPathCollection._NewEnum">
      <summary>Returns an object that can be used to iterate through all the object paths in the collection.</summary>
    </member>
    <member name="T:AGI.STKX.AgObjPathCollectionClass">
      <summary>Collection of object paths.</summary>
      <remarks><para>This object is not creatable. It is used for the ObjPaths property of the AgRubberBandPickInfoData object.</para></remarks>
    </member>
    <member name="M:AGI.STKX.AgObjPathCollectionClass.Range(System.Int32,System.Int32)">
      <summary>Return the elements within the specified range.<para>The purpose of this method is to avoid marshalling round-trips (marshalling occurs when the STK X controls are used in .NET or Java).</para><para>If the collection contains lots of elements, iterating using the For Each statement or the Item method may be slow. Using the Range method enables you to transfer several elements in one round-trip improving performance.</para></summary>
      <returns><para>Array of variants [COM] or objects [.NET].</para></returns>
      <param name="StartIndex"><para>Start position of the range. one represents the first element of the collection.</para></param>
      <param name="StopIndex"><para>End position of the range. The Count property represents the last element of the collection.</para></param>
    </member>
    <member name="P:AGI.STKX.AgObjPathCollectionClass.Count">
      <summary>Number of elements contained in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.AgObjPathCollectionClass.Item">
      <summary>Gets the element at the specified index (0-based).</summary>
    </member>
    <member name="P:AGI.STKX.AgObjPathCollectionClass._NewEnum">
      <summary>Returns an object that can be used to iterate through all the object paths in the collection.</summary>
    </member>
    <member name="T:AGI.STKX.AgDrawElemRect">
      <summary>Defines a rectangle in window coordinates.</summary>
      <remarks><para>This object is not creatable. It is created indirectly through the Add method of the AgDrawElemCollection object.</para></remarks>
    </member>
    <member name="M:AGI.STKX.AgDrawElemRect.Set(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Set the rectangle coordinates.<para>The rectangle coordinates are updated, and then the display is updated.</para></summary>
      <param name="Left"><para>The x-coordinate of the left edge of this rectangle (in the control's window coordinates).</para></param>
      <param name="Top"><para>The y-coordinate of the top edge of this rectangle (in the control's window coordinates).</para></param>
      <param name="Right"><para>The x-coordinate of the right edge of this rectangle (in the control's window coordinates).</para></param>
      <param name="Bottom"><para>The y-coordinate of the bottom edge of this rectangle (in the control's window coordinates).</para></param>
    </member>
    <member name="P:AGI.STKX.AgDrawElemRect.Visible">
      <summary>Show or hide the element.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemRect.Left">
      <summary>The x-coordinate of the left edge of this rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemRect.Right">
      <summary>The x-coordinate of the right edge of this rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemRect.Top">
      <summary>The y-coordinate of the top edge of this rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemRect.Bottom">
      <summary>The y-coordinate of the bottom edge of this rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemRect.Color">
      <summary>Color of the rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemRect.LineWidth">
      <summary>Specifies the width of the line.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemRect.LineStyle">
      <summary>Specifies the style of the line.</summary>
    </member>
    <member name="T:AGI.STKX.AgDrawElemRectClass">
      <summary>Defines a rectangle in window coordinates.</summary>
      <remarks><para>This object is not creatable. It is created indirectly through the Add method of the AgDrawElemCollection object.</para></remarks>
    </member>
    <member name="M:AGI.STKX.AgDrawElemRectClass.Set(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Set the rectangle coordinates.<para>The rectangle coordinates are updated, and then the display is updated.</para></summary>
      <param name="Left"><para>The x-coordinate of the left edge of this rectangle (in the control's window coordinates).</para></param>
      <param name="Top"><para>The y-coordinate of the top edge of this rectangle (in the control's window coordinates).</para></param>
      <param name="Right"><para>The x-coordinate of the right edge of this rectangle (in the control's window coordinates).</para></param>
      <param name="Bottom"><para>The y-coordinate of the bottom edge of this rectangle (in the control's window coordinates).</para></param>
    </member>
    <member name="P:AGI.STKX.AgDrawElemRectClass.Visible">
      <summary>Show or hide the element.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemRectClass.Left">
      <summary>The x-coordinate of the left edge of this rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemRectClass.Right">
      <summary>The x-coordinate of the right edge of this rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemRectClass.Top">
      <summary>The y-coordinate of the top edge of this rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemRectClass.Bottom">
      <summary>The y-coordinate of the bottom edge of this rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemRectClass.Color">
      <summary>Color of the rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemRectClass.LineWidth">
      <summary>Specifies the width of the line.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemRectClass.LineStyle">
      <summary>Specifies the style of the line.</summary>
    </member>
    <member name="T:AGI.STKX.AgDrawElemCollection">
      <summary>Collection of elements to draw on the control.</summary>
      <remarks><para>This object is not creatable. It is accessible through the DrawElements property of the Globe control.</para></remarks>
    </member>
    <member name="M:AGI.STKX.AgDrawElemCollection.Clear">
      <summary>Clears the contents of the collection and updates the display.</summary>
    </member>
    <member name="M:AGI.STKX.AgDrawElemCollection.Add(System.String)">
      <summary>Factory to create and add a new element to the end of the sequence.</summary>
      <returns><para>Returns a new drawing element (interface IAgDrawElem).</para><para>When the input parameter Type is Rect, the return data is of type AgDrawElemRect.</para><para>If the input parameter Type is incorrect, an automation exception is raised.</para></returns>
      <param name="ElemType"><para>Type of element to create. Currently only Rect is supported.</para></param>
    </member>
    <member name="M:AGI.STKX.AgDrawElemCollection.Remove(AGI.STKX.IAgDrawElem)">
      <summary>Remove the specified element.</summary>
      <returns><para>None. An automation exception is thrown if the element is not found in the collection.</para></returns>
      <param name="DrawElem"><para>Element to remove from the collection.</para></param>
    </member>
    <member name="P:AGI.STKX.AgDrawElemCollection.Count">
      <summary>Number of elements contained in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemCollection.Item">
      <summary>Gets the element at the specified index (0-based).</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemCollection._NewEnum">
      <summary>Returns an object that can be used to iterate through all the strings in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemCollection.Visible">
      <summary>Show or hide all the elements.</summary>
    </member>
    <member name="T:AGI.STKX.AgDrawElemCollectionClass">
      <summary>Collection of elements to draw on the control.</summary>
      <remarks><para>This object is not creatable. It is accessible through the DrawElements property of the Globe control.</para></remarks>
    </member>
    <member name="M:AGI.STKX.AgDrawElemCollectionClass.Clear">
      <summary>Clears the contents of the collection and updates the display.</summary>
    </member>
    <member name="M:AGI.STKX.AgDrawElemCollectionClass.Add(System.String)">
      <summary>Factory to create and add a new element to the end of the sequence.</summary>
      <returns><para>Returns a new drawing element (interface IAgDrawElem).</para><para>When the input parameter Type is Rect, the return data is of type AgDrawElemRect.</para><para>If the input parameter Type is incorrect, an automation exception is raised.</para></returns>
      <param name="ElemType"><para>Type of element to create. Currently only Rect is supported.</para></param>
    </member>
    <member name="M:AGI.STKX.AgDrawElemCollectionClass.Remove(AGI.STKX.IAgDrawElem)">
      <summary>Remove the specified element.</summary>
      <returns><para>None. An automation exception is thrown if the element is not found in the collection.</para></returns>
      <param name="DrawElem"><para>Element to remove from the collection.</para></param>
    </member>
    <member name="P:AGI.STKX.AgDrawElemCollectionClass.Count">
      <summary>Number of elements contained in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemCollectionClass.Item">
      <summary>Gets the element at the specified index (0-based).</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemCollectionClass._NewEnum">
      <summary>Returns an object that can be used to iterate through all the strings in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemCollectionClass.Visible">
      <summary>Show or hide all the elements.</summary>
    </member>
    <member name="T:AGI.STKX.AgDraw2DElemRect">
      <summary>Defines a rectangle in window coordinates for map control.</summary>
    </member>
    <member name="M:AGI.STKX.AgDraw2DElemRect.Set(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Set the rectangle coordinates.<para>The rectangle coordinates are updated, and then the display is updated.</para></summary>
      <param name="Left"><para>The x-coordinate of the left edge of this rectangle (in the control's window coordinates).</para></param>
      <param name="Top"><para>The y-coordinate of the top edge of this rectangle (in the control's window coordinates).</para></param>
      <param name="Right"><para>The x-coordinate of the right edge of this rectangle (in the control's window coordinates).</para></param>
      <param name="Bottom"><para>The y-coordinate of the bottom edge of this rectangle (in the control's window coordinates).</para></param>
    </member>
    <member name="P:AGI.STKX.AgDraw2DElemRect.Visible">
      <summary>Show or hide the element.</summary>
    </member>
    <member name="P:AGI.STKX.AgDraw2DElemRect.Left">
      <summary>The x-coordinate of the left edge of this rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.AgDraw2DElemRect.Right">
      <summary>The x-coordinate of the right edge of this rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.AgDraw2DElemRect.Top">
      <summary>The y-coordinate of the top edge of this rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.AgDraw2DElemRect.Bottom">
      <summary>The y-coordinate of the bottom edge of this rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.AgDraw2DElemRect.Color">
      <summary>Color of the rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.AgDraw2DElemRect.LineWidth">
      <summary>Specifies the width of the line.</summary>
    </member>
    <member name="P:AGI.STKX.AgDraw2DElemRect.LineStyle">
      <summary>Specifies the style of the line.</summary>
    </member>
    <member name="T:AGI.STKX.AgDraw2DElemRectClass">
      <summary>Defines a rectangle in window coordinates for map control.</summary>
    </member>
    <member name="M:AGI.STKX.AgDraw2DElemRectClass.Set(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Set the rectangle coordinates.<para>The rectangle coordinates are updated, and then the display is updated.</para></summary>
      <param name="Left"><para>The x-coordinate of the left edge of this rectangle (in the control's window coordinates).</para></param>
      <param name="Top"><para>The y-coordinate of the top edge of this rectangle (in the control's window coordinates).</para></param>
      <param name="Right"><para>The x-coordinate of the right edge of this rectangle (in the control's window coordinates).</para></param>
      <param name="Bottom"><para>The y-coordinate of the bottom edge of this rectangle (in the control's window coordinates).</para></param>
    </member>
    <member name="P:AGI.STKX.AgDraw2DElemRectClass.Visible">
      <summary>Show or hide the element.</summary>
    </member>
    <member name="P:AGI.STKX.AgDraw2DElemRectClass.Left">
      <summary>The x-coordinate of the left edge of this rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.AgDraw2DElemRectClass.Right">
      <summary>The x-coordinate of the right edge of this rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.AgDraw2DElemRectClass.Top">
      <summary>The y-coordinate of the top edge of this rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.AgDraw2DElemRectClass.Bottom">
      <summary>The y-coordinate of the bottom edge of this rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.AgDraw2DElemRectClass.Color">
      <summary>Color of the rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.AgDraw2DElemRectClass.LineWidth">
      <summary>Specifies the width of the line.</summary>
    </member>
    <member name="P:AGI.STKX.AgDraw2DElemRectClass.LineStyle">
      <summary>Specifies the style of the line.</summary>
    </member>
    <member name="T:AGI.STKX.AgDraw2DElemCollection">
      <summary>Collection of elements to draw on map control.</summary>
    </member>
    <member name="M:AGI.STKX.AgDraw2DElemCollection.Clear">
      <summary>Clears the contents of the collection and updates the display.</summary>
    </member>
    <member name="M:AGI.STKX.AgDraw2DElemCollection.Add(System.String)">
      <summary>Factory to create and add a new element to the end of the sequence.</summary>
      <returns><para>Returns a new drawing element (interface IAgDrawElem).</para><para>When the input parameter Type is Rect, the return data is of type AgDrawElemRect.</para><para>If the input parameter Type is incorrect, an automation exception is raised.</para></returns>
      <param name="ElemType"><para>Type of element to create. Currently only Rect is supported.</para></param>
    </member>
    <member name="M:AGI.STKX.AgDraw2DElemCollection.Remove(AGI.STKX.IAgDrawElem)">
      <summary>Remove the specified element.</summary>
      <returns><para>None. An automation exception is thrown if the element is not found in the collection.</para></returns>
      <param name="DrawElem"><para>Element to remove from the collection.</para></param>
    </member>
    <member name="P:AGI.STKX.AgDraw2DElemCollection.Count">
      <summary>Number of elements contained in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.AgDraw2DElemCollection.Item">
      <summary>Gets the element at the specified index (0-based).</summary>
    </member>
    <member name="P:AGI.STKX.AgDraw2DElemCollection._NewEnum">
      <summary>Returns an object that can be used to iterate through all the strings in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.AgDraw2DElemCollection.Visible">
      <summary>Show or hide all the elements.</summary>
    </member>
    <member name="T:AGI.STKX.AgDraw2DElemCollectionClass">
      <summary>Collection of elements to draw on map control.</summary>
    </member>
    <member name="M:AGI.STKX.AgDraw2DElemCollectionClass.Clear">
      <summary>Clears the contents of the collection and updates the display.</summary>
    </member>
    <member name="M:AGI.STKX.AgDraw2DElemCollectionClass.Add(System.String)">
      <summary>Factory to create and add a new element to the end of the sequence.</summary>
      <returns><para>Returns a new drawing element (interface IAgDrawElem).</para><para>When the input parameter Type is Rect, the return data is of type AgDrawElemRect.</para><para>If the input parameter Type is incorrect, an automation exception is raised.</para></returns>
      <param name="ElemType"><para>Type of element to create. Currently only Rect is supported.</para></param>
    </member>
    <member name="M:AGI.STKX.AgDraw2DElemCollectionClass.Remove(AGI.STKX.IAgDrawElem)">
      <summary>Remove the specified element.</summary>
      <returns><para>None. An automation exception is thrown if the element is not found in the collection.</para></returns>
      <param name="DrawElem"><para>Element to remove from the collection.</para></param>
    </member>
    <member name="P:AGI.STKX.AgDraw2DElemCollectionClass.Count">
      <summary>Number of elements contained in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.AgDraw2DElemCollectionClass.Item">
      <summary>Gets the element at the specified index (0-based).</summary>
    </member>
    <member name="P:AGI.STKX.AgDraw2DElemCollectionClass._NewEnum">
      <summary>Returns an object that can be used to iterate through all the strings in the collection.</summary>
    </member>
    <member name="P:AGI.STKX.AgDraw2DElemCollectionClass.Visible">
      <summary>Show or hide all the elements.</summary>
    </member>
    <member name="T:AGI.STKX.AgUiAxGfxAnalysisCntrl">
      <summary>AGI Graphics Analysis Control</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxGfxAnalysisCntrl.BackColor">
      <summary>The background color of the control.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxGfxAnalysisCntrl.Picture">
      <summary>The splash logo graphic to be displayed in the control.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxGfxAnalysisCntrl.NoLogo">
      <summary>If true, the splash logo is not shown.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxGfxAnalysisCntrl.VendorID">
      <summary>The identifier of the vendor.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxGfxAnalysisCntrl.ReadyState">
      <summary>Returns the ready state of the control.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxGfxAnalysisCntrl.Application">
      <summary>Reference to the STK X application object.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxGfxAnalysisCntrl.ControlMode">
      <summary>The Graphics control mode.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxGfxAnalysisCntrl.PictureFromFile">
      <summary>The splash logo graphic file to be displayed in the control.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxGfxAnalysisCntrl.WinID">
      <summary>Window identifier (for Connect commands).</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAxGfxAnalysisCntrlEvents_Event.KeyDown">
      <summary>Occurs when the user presses a key while the control has the focus.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAxGfxAnalysisCntrlEvents_Event.KeyPress">
      <summary>Occurs when the user presses and releases a key or key combination that corresponds to an ANSI code.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAxGfxAnalysisCntrlEvents_Event.KeyUp">
      <summary>Occurs when the user releases a key while the control has the focus.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAxGfxAnalysisCntrlEvents_Event.Click">
      <summary>Occurs when the user presses and then releases a mouse button over the control.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAxGfxAnalysisCntrlEvents_Event.DblClick">
      <summary>Occurs when the user presses and releases a mouse button and then presses and releases it again over the control.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAxGfxAnalysisCntrlEvents_Event.MouseDown">
      <summary>Occur when the user presses a mouse button.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAxGfxAnalysisCntrlEvents_Event.MouseMove">
      <summary>Occurs when the mouse pointer is moved across the control.</summary>
    </member>
    <member name="E:AGI.STKX.IAgUiAxGfxAnalysisCntrlEvents_Event.MouseUp">
      <summary>Occurs when the user releases a mouse button.</summary>
    </member>
    <member name="T:AGI.STKX.AgUiAxGfxAnalysisCntrlClass">
      <summary>AGI Graphics Analysis Control</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxGfxAnalysisCntrlClass.BackColor">
      <summary>The background color of the control.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxGfxAnalysisCntrlClass.Picture">
      <summary>The splash logo graphic to be displayed in the control.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxGfxAnalysisCntrlClass.NoLogo">
      <summary>If true, the splash logo is not shown.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxGfxAnalysisCntrlClass.VendorID">
      <summary>The identifier of the vendor.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxGfxAnalysisCntrlClass.ReadyState">
      <summary>Returns the ready state of the control.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxGfxAnalysisCntrlClass.Application">
      <summary>Reference to the STK X application object.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxGfxAnalysisCntrlClass.ControlMode">
      <summary>The Graphics control mode.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxGfxAnalysisCntrlClass.PictureFromFile">
      <summary>The splash logo graphic file to be displayed in the control.</summary>
    </member>
    <member name="P:AGI.STKX.AgUiAxGfxAnalysisCntrlClass.WinID">
      <summary>Window identifier (for Connect commands).</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAxGfxAnalysisCntrlClass.KeyDown">
      <summary>Occurs when the user presses a key while the control has the focus.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAxGfxAnalysisCntrlClass.KeyPress">
      <summary>Occurs when the user presses and releases a key or key combination that corresponds to an ANSI code.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAxGfxAnalysisCntrlClass.KeyUp">
      <summary>Occurs when the user releases a key while the control has the focus.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAxGfxAnalysisCntrlClass.Click">
      <summary>Occurs when the user presses and then releases a mouse button over the control.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAxGfxAnalysisCntrlClass.DblClick">
      <summary>Occurs when the user presses and releases a mouse button and then presses and releases it again over the control.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAxGfxAnalysisCntrlClass.MouseDown">
      <summary>Occur when the user presses a mouse button.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAxGfxAnalysisCntrlClass.MouseMove">
      <summary>Occurs when the mouse pointer is moved across the control.</summary>
    </member>
    <member name="E:AGI.STKX.AgUiAxGfxAnalysisCntrlClass.MouseUp">
      <summary>Occurs when the user releases a mouse button.</summary>
    </member>
    <member name="T:AGI.STKX.AgWinProjPos">
      <summary>Projected window postion result.</summary>
    </member>
    <member name="P:AGI.STKX.AgWinProjPos.XPos">
      <summary>Projected window X position.</summary>
    </member>
    <member name="P:AGI.STKX.AgWinProjPos.YPos">
      <summary>Projected window Y position.</summary>
    </member>
    <member name="P:AGI.STKX.AgWinProjPos.IsWinProjPosValid">
      <summary>Indicates if the returned projected positon is valid or not.</summary>
    </member>
    <member name="T:AGI.STKX.AgWinProjPosClass">
      <summary>Projected window postion result.</summary>
    </member>
    <member name="P:AGI.STKX.AgWinProjPosClass.XPos">
      <summary>Projected window X position.</summary>
    </member>
    <member name="P:AGI.STKX.AgWinProjPosClass.YPos">
      <summary>Projected window Y position.</summary>
    </member>
    <member name="P:AGI.STKX.AgWinProjPosClass.IsWinProjPosValid">
      <summary>Indicates if the returned projected positon is valid or not.</summary>
    </member>
    <member name="T:AGI.STKX.AgDrawElemLine">
      <summary>Defines a line in window coordinates.</summary>
      <remarks><para>This object is not creatable. It is created indirectly through the Add method of the AgDrawElemCollection object.</para></remarks>
    </member>
    <member name="M:AGI.STKX.AgDrawElemLine.Set(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Set the rectangle coordinates.<para>The line coordinates are updated, and then the display is updated.</para></summary>
      <param name="Left"><para>The x-coordinate of the left edge of this line (in the control's window coordinates).</para></param>
      <param name="Top"><para>The y-coordinate of the top edge of this line (in the control's window coordinates).</para></param>
      <param name="Right"><para>The x-coordinate of the right edge of this line (in the control's window coordinates).</para></param>
      <param name="Bottom"><para>The y-coordinate of the bottom edge of this line (in the control's window coordinates).</para></param>
    </member>
    <member name="P:AGI.STKX.AgDrawElemLine.Visible">
      <summary>Show or hide the element.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemLine.Left">
      <summary>The x-coordinate of the left edge of this line.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemLine.Right">
      <summary>The x-coordinate of the right edge of this line.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemLine.Top">
      <summary>The y-coordinate of the top edge of this line.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemLine.Bottom">
      <summary>The y-coordinate of the bottom edge of this line.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemLine.Color">
      <summary>Color of the rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemLine.LineWidth">
      <summary>Specifies the width of the line.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemLine.LineStyle">
      <summary>Specifies the style of the line.</summary>
    </member>
    <member name="T:AGI.STKX.AgDrawElemLineClass">
      <summary>Defines a line in window coordinates.</summary>
      <remarks><para>This object is not creatable. It is created indirectly through the Add method of the AgDrawElemCollection object.</para></remarks>
    </member>
    <member name="M:AGI.STKX.AgDrawElemLineClass.Set(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Set the rectangle coordinates.<para>The line coordinates are updated, and then the display is updated.</para></summary>
      <param name="Left"><para>The x-coordinate of the left edge of this line (in the control's window coordinates).</para></param>
      <param name="Top"><para>The y-coordinate of the top edge of this line (in the control's window coordinates).</para></param>
      <param name="Right"><para>The x-coordinate of the right edge of this line (in the control's window coordinates).</para></param>
      <param name="Bottom"><para>The y-coordinate of the bottom edge of this line (in the control's window coordinates).</para></param>
    </member>
    <member name="P:AGI.STKX.AgDrawElemLineClass.Visible">
      <summary>Show or hide the element.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemLineClass.Left">
      <summary>The x-coordinate of the left edge of this line.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemLineClass.Right">
      <summary>The x-coordinate of the right edge of this line.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemLineClass.Top">
      <summary>The y-coordinate of the top edge of this line.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemLineClass.Bottom">
      <summary>The y-coordinate of the bottom edge of this line.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemLineClass.Color">
      <summary>Color of the rectangle.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemLineClass.LineWidth">
      <summary>Specifies the width of the line.</summary>
    </member>
    <member name="P:AGI.STKX.AgDrawElemLineClass.LineStyle">
      <summary>Specifies the style of the line.</summary>
    </member>
    <member name="T:AGI.STKX.AgSTKXSSLCertificateErrorEventArgs">
      <summary>Provides information about an SSL certificate that is expired or invalid.</summary>
    </member>
    <member name="M:AGI.STKX.AgSTKXSSLCertificateErrorEventArgs.SetIgnoreError(System.Boolean)">
      <summary>Specify True to ignore the certificate error and continue with establishing secure HTTP connection to the remote server.</summary>
      <param name="IgnoreError"></param>
    </member>
    <member name="M:AGI.STKX.AgSTKXSSLCertificateErrorEventArgs.SetIgnoreErrorPermanently(System.Boolean)">
      <summary>Specify True to ignore the certificate error and add the certificate to the list of trusted certificates.</summary>
      <param name="IgnoreErrorPermanently"></param>
    </member>
    <member name="P:AGI.STKX.AgSTKXSSLCertificateErrorEventArgs.IsErrorIgnored">
      <summary>Returns whether the invalid certificate error is ignored.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXSSLCertificateErrorEventArgs.SerialNumber">
      <summary>Certificate's serial number.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXSSLCertificateErrorEventArgs.Issuer">
      <summary>The provider who issued the certificate.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXSSLCertificateErrorEventArgs.Subject">
      <summary>Certificate's subject field.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXSSLCertificateErrorEventArgs.ValidDate">
      <summary>Certificate's valid date.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXSSLCertificateErrorEventArgs.ExpirationDate">
      <summary>Certificate's expiration date.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXSSLCertificateErrorEventArgs.IsExpired">
      <summary>Whether the certificate is expired.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXSSLCertificateErrorEventArgs.PEMData">
      <summary>Certificate's PEM data encoded as base-64.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXSSLCertificateErrorEventArgs.Handled">
      <summary>Indicates whether the event should continue be routed to the listeners. Setting Handled to true will prevent the event from reaching any remaining listeners.</summary>
    </member>
    <member name="T:AGI.STKX.AgSTKXSSLCertificateErrorEventArgsClass">
      <summary>Provides information about an SSL certificate that is expired or invalid.</summary>
    </member>
    <member name="M:AGI.STKX.AgSTKXSSLCertificateErrorEventArgsClass.SetIgnoreError(System.Boolean)">
      <summary>Specify True to ignore the certificate error and continue with establishing secure HTTP connection to the remote server.</summary>
      <param name="IgnoreError"></param>
    </member>
    <member name="M:AGI.STKX.AgSTKXSSLCertificateErrorEventArgsClass.SetIgnoreErrorPermanently(System.Boolean)">
      <summary>Specify True to ignore the certificate error and add the certificate to the list of trusted certificates.</summary>
      <param name="IgnoreErrorPermanently"></param>
    </member>
    <member name="P:AGI.STKX.AgSTKXSSLCertificateErrorEventArgsClass.IsErrorIgnored">
      <summary>Returns whether the invalid certificate error is ignored.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXSSLCertificateErrorEventArgsClass.SerialNumber">
      <summary>Certificate's serial number.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXSSLCertificateErrorEventArgsClass.Issuer">
      <summary>The provider who issued the certificate.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXSSLCertificateErrorEventArgsClass.Subject">
      <summary>Certificate's subject field.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXSSLCertificateErrorEventArgsClass.ValidDate">
      <summary>Certificate's valid date.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXSSLCertificateErrorEventArgsClass.ExpirationDate">
      <summary>Certificate's expiration date.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXSSLCertificateErrorEventArgsClass.IsExpired">
      <summary>Whether the certificate is expired.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXSSLCertificateErrorEventArgsClass.PEMData">
      <summary>Certificate's PEM data encoded as base-64.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXSSLCertificateErrorEventArgsClass.Handled">
      <summary>Indicates whether the event should continue be routed to the listeners. Setting Handled to true will prevent the event from reaching any remaining listeners.</summary>
    </member>
    <member name="T:AGI.STKX.AgSTKXConControlQuitReceivedEventArgs">
      <summary>Arguments for the OnConControlQuitReceived event.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXConControlQuitReceivedEventArgs.Acknowledge">
      <summary>Indicates whether or not to acknowledge the connect command.</summary>
    </member>
    <member name="T:AGI.STKX.AgSTKXConControlQuitReceivedEventArgsClass">
      <summary>Arguments for the OnConControlQuitReceived event.</summary>
    </member>
    <member name="P:AGI.STKX.AgSTKXConControlQuitReceivedEventArgsClass.Acknowledge">
      <summary>Indicates whether or not to acknowledge the connect command.</summary>
    </member>
  </members>
</doc>